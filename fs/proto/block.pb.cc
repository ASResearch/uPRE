// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: block.proto

#include "block.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_block_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_block_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ContractMeta;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_block_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Data;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_block_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_Random;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_block_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_Transaction;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_block_2eproto ::google::protobuf::internal::SCCInfo<2> scc_info_BlockHeader;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_block_2eproto ::google::protobuf::internal::SCCInfo<3> scc_info_Block;
}  // namespace protobuf_block_2eproto
namespace protobuf_dag_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_dag_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_Dag;
}  // namespace protobuf_dag_2eproto
namespace protobuf_state_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_state_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_ConsensusRoot;
}  // namespace protobuf_state_2eproto
namespace corepb {
class AccountDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Account>
      _instance;
} _Account_default_instance_;
class ContractMetaDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<ContractMeta>
      _instance;
} _ContractMeta_default_instance_;
class DataDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Data>
      _instance;
} _Data_default_instance_;
class TransactionDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Transaction>
      _instance;
} _Transaction_default_instance_;
class BlockHeaderDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<BlockHeader>
      _instance;
} _BlockHeader_default_instance_;
class BlockDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Block>
      _instance;
} _Block_default_instance_;
class NetBlocksDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<NetBlocks>
      _instance;
} _NetBlocks_default_instance_;
class NetBlockDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<NetBlock>
      _instance;
} _NetBlock_default_instance_;
class DownloadBlockDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<DownloadBlock>
      _instance;
} _DownloadBlock_default_instance_;
class RandomDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Random>
      _instance;
} _Random_default_instance_;
}  // namespace corepb
namespace protobuf_block_2eproto {
static void InitDefaultsAccount() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::corepb::_Account_default_instance_;
    new (ptr) ::corepb::Account();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::corepb::Account::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_Account =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsAccount}, {
      &protobuf_block_2eproto::scc_info_ContractMeta.base,}};

static void InitDefaultsContractMeta() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::corepb::_ContractMeta_default_instance_;
    new (ptr) ::corepb::ContractMeta();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::corepb::ContractMeta::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_ContractMeta =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsContractMeta}, {}};

static void InitDefaultsData() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::corepb::_Data_default_instance_;
    new (ptr) ::corepb::Data();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::corepb::Data::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Data =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsData}, {}};

static void InitDefaultsTransaction() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::corepb::_Transaction_default_instance_;
    new (ptr) ::corepb::Transaction();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::corepb::Transaction::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_Transaction =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsTransaction}, {
      &protobuf_block_2eproto::scc_info_Data.base,}};

static void InitDefaultsBlockHeader() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::corepb::_BlockHeader_default_instance_;
    new (ptr) ::corepb::BlockHeader();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::corepb::BlockHeader::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<2> scc_info_BlockHeader =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsBlockHeader}, {
      &protobuf_state_2eproto::scc_info_ConsensusRoot.base,
      &protobuf_block_2eproto::scc_info_Random.base,}};

static void InitDefaultsBlock() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::corepb::_Block_default_instance_;
    new (ptr) ::corepb::Block();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::corepb::Block::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<3> scc_info_Block =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 3, InitDefaultsBlock}, {
      &protobuf_block_2eproto::scc_info_BlockHeader.base,
      &protobuf_block_2eproto::scc_info_Transaction.base,
      &protobuf_dag_2eproto::scc_info_Dag.base,}};

static void InitDefaultsNetBlocks() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::corepb::_NetBlocks_default_instance_;
    new (ptr) ::corepb::NetBlocks();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::corepb::NetBlocks::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_NetBlocks =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsNetBlocks}, {
      &protobuf_block_2eproto::scc_info_Block.base,}};

static void InitDefaultsNetBlock() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::corepb::_NetBlock_default_instance_;
    new (ptr) ::corepb::NetBlock();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::corepb::NetBlock::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_NetBlock =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsNetBlock}, {
      &protobuf_block_2eproto::scc_info_Block.base,}};

static void InitDefaultsDownloadBlock() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::corepb::_DownloadBlock_default_instance_;
    new (ptr) ::corepb::DownloadBlock();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::corepb::DownloadBlock::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_DownloadBlock =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsDownloadBlock}, {}};

static void InitDefaultsRandom() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::corepb::_Random_default_instance_;
    new (ptr) ::corepb::Random();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::corepb::Random::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_Random =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsRandom}, {}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_Account.base);
  ::google::protobuf::internal::InitSCC(&scc_info_ContractMeta.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Data.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Transaction.base);
  ::google::protobuf::internal::InitSCC(&scc_info_BlockHeader.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Block.base);
  ::google::protobuf::internal::InitSCC(&scc_info_NetBlocks.base);
  ::google::protobuf::internal::InitSCC(&scc_info_NetBlock.base);
  ::google::protobuf::internal::InitSCC(&scc_info_DownloadBlock.base);
  ::google::protobuf::internal::InitSCC(&scc_info_Random.base);
}

::google::protobuf::Metadata file_level_metadata[10];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::corepb::Account, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::corepb::Account, address_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::corepb::Account, balance_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::corepb::Account, nonce_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::corepb::Account, vars_hash_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::corepb::Account, birth_place_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::corepb::Account, contract_meta_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::corepb::ContractMeta, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::corepb::ContractMeta, version_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::corepb::Data, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::corepb::Data, type_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::corepb::Data, payload_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::corepb::Transaction, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::corepb::Transaction, hash_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::corepb::Transaction, from_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::corepb::Transaction, to_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::corepb::Transaction, value_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::corepb::Transaction, nonce_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::corepb::Transaction, timestamp_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::corepb::Transaction, data_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::corepb::Transaction, chain_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::corepb::Transaction, gas_price_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::corepb::Transaction, gas_limit_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::corepb::Transaction, alg_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::corepb::Transaction, sign_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::corepb::BlockHeader, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::corepb::BlockHeader, hash_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::corepb::BlockHeader, parent_hash_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::corepb::BlockHeader, coinbase_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::corepb::BlockHeader, timestamp_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::corepb::BlockHeader, chain_id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::corepb::BlockHeader, alg_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::corepb::BlockHeader, sign_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::corepb::BlockHeader, state_root_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::corepb::BlockHeader, txs_root_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::corepb::BlockHeader, events_root_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::corepb::BlockHeader, consensus_root_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::corepb::BlockHeader, random_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::corepb::Block, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::corepb::Block, header_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::corepb::Block, transactions_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::corepb::Block, dependency_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::corepb::Block, height_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::corepb::NetBlocks, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::corepb::NetBlocks, from_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::corepb::NetBlocks, batch_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::corepb::NetBlocks, blocks_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::corepb::NetBlock, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::corepb::NetBlock, from_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::corepb::NetBlock, batch_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::corepb::NetBlock, block_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::corepb::DownloadBlock, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::corepb::DownloadBlock, hash_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::corepb::DownloadBlock, sign_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::corepb::Random, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::corepb::Random, vrf_seed_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::corepb::Random, vrf_proof_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::corepb::Account)},
  { 11, -1, sizeof(::corepb::ContractMeta)},
  { 17, -1, sizeof(::corepb::Data)},
  { 24, -1, sizeof(::corepb::Transaction)},
  { 41, -1, sizeof(::corepb::BlockHeader)},
  { 58, -1, sizeof(::corepb::Block)},
  { 67, -1, sizeof(::corepb::NetBlocks)},
  { 75, -1, sizeof(::corepb::NetBlock)},
  { 83, -1, sizeof(::corepb::DownloadBlock)},
  { 90, -1, sizeof(::corepb::Random)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::corepb::_Account_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::corepb::_ContractMeta_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::corepb::_Data_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::corepb::_Transaction_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::corepb::_BlockHeader_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::corepb::_Block_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::corepb::_NetBlocks_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::corepb::_NetBlock_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::corepb::_DownloadBlock_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::corepb::_Random_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "block.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 10);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\013block.proto\022\006corepb\032\tdag.proto\032\013state."
      "proto\"\217\001\n\007Account\022\017\n\007address\030\001 \001(\014\022\017\n\007ba"
      "lance\030\002 \001(\014\022\r\n\005nonce\030\003 \001(\004\022\021\n\tvars_hash\030"
      "\004 \001(\014\022\023\n\013birth_place\030\005 \001(\014\022+\n\rcontract_m"
      "eta\030\006 \001(\0132\024.corepb.ContractMeta\"\037\n\014Contr"
      "actMeta\022\017\n\007version\030\001 \001(\t\"%\n\004Data\022\014\n\004type"
      "\030\001 \001(\t\022\017\n\007payload\030\002 \001(\014\"\325\001\n\013Transaction\022"
      "\014\n\004hash\030\001 \001(\014\022\014\n\004from\030\002 \001(\014\022\n\n\002to\030\003 \001(\014\022"
      "\r\n\005value\030\004 \001(\014\022\r\n\005nonce\030\005 \001(\004\022\021\n\ttimesta"
      "mp\030\006 \001(\003\022\032\n\004data\030\007 \001(\0132\014.corepb.Data\022\020\n\010"
      "chain_id\030\010 \001(\r\022\021\n\tgas_price\030\t \001(\014\022\021\n\tgas"
      "_limit\030\n \001(\014\022\013\n\003alg\030\013 \001(\r\022\014\n\004sign\030\014 \001(\014\""
      "\227\002\n\013BlockHeader\022\014\n\004hash\030\001 \001(\014\022\023\n\013parent_"
      "hash\030\002 \001(\014\022\020\n\010coinbase\030\004 \001(\014\022\021\n\ttimestam"
      "p\030\005 \001(\003\022\020\n\010chain_id\030\006 \001(\r\022\013\n\003alg\030\007 \001(\r\022\014"
      "\n\004sign\030\010 \001(\014\022\022\n\nstate_root\030\t \001(\014\022\020\n\010txs_"
      "root\030\n \001(\014\022\023\n\013events_root\030\013 \001(\014\0222\n\016conse"
      "nsus_root\030\014 \001(\0132\032.consensuspb.ConsensusR"
      "oot\022\036\n\006random\030\r \001(\0132\016.corepb.RandomJ\004\010\003\020"
      "\004\"\207\001\n\005Block\022#\n\006header\030\001 \001(\0132\023.corepb.Blo"
      "ckHeader\022)\n\014transactions\030\002 \003(\0132\023.corepb."
      "Transaction\022\036\n\ndependency\030\003 \001(\0132\n.dagpb."
      "Dag\022\016\n\006height\030\004 \001(\004\"G\n\tNetBlocks\022\014\n\004from"
      "\030\001 \001(\t\022\r\n\005batch\030\002 \001(\004\022\035\n\006blocks\030\003 \003(\0132\r."
      "corepb.Block\"E\n\010NetBlock\022\014\n\004from\030\001 \001(\t\022\r"
      "\n\005batch\030\002 \001(\004\022\034\n\005block\030\003 \001(\0132\r.corepb.Bl"
      "ock\"+\n\rDownloadBlock\022\014\n\004hash\030\001 \001(\014\022\014\n\004si"
      "gn\030\002 \001(\014\"-\n\006Random\022\020\n\010vrf_seed\030\001 \001(\014\022\021\n\t"
      "vrf_proof\030\002 \001(\014b\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 1143);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "block.proto", &protobuf_RegisterTypes);
  ::protobuf_dag_2eproto::AddDescriptors();
  ::protobuf_state_2eproto::AddDescriptors();
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_block_2eproto
namespace corepb {

// ===================================================================

void Account::InitAsDefaultInstance() {
  ::corepb::_Account_default_instance_._instance.get_mutable()->contract_meta_ = const_cast< ::corepb::ContractMeta*>(
      ::corepb::ContractMeta::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Account::kAddressFieldNumber;
const int Account::kBalanceFieldNumber;
const int Account::kNonceFieldNumber;
const int Account::kVarsHashFieldNumber;
const int Account::kBirthPlaceFieldNumber;
const int Account::kContractMetaFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Account::Account()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_block_2eproto::scc_info_Account.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:corepb.Account)
}
Account::Account(const Account& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  address_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.address().size() > 0) {
    address_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.address_);
  }
  balance_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.balance().size() > 0) {
    balance_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.balance_);
  }
  vars_hash_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.vars_hash().size() > 0) {
    vars_hash_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.vars_hash_);
  }
  birth_place_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.birth_place().size() > 0) {
    birth_place_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.birth_place_);
  }
  if (from.has_contract_meta()) {
    contract_meta_ = new ::corepb::ContractMeta(*from.contract_meta_);
  } else {
    contract_meta_ = NULL;
  }
  nonce_ = from.nonce_;
  // @@protoc_insertion_point(copy_constructor:corepb.Account)
}

void Account::SharedCtor() {
  address_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  balance_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  vars_hash_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  birth_place_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&contract_meta_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&nonce_) -
      reinterpret_cast<char*>(&contract_meta_)) + sizeof(nonce_));
}

Account::~Account() {
  // @@protoc_insertion_point(destructor:corepb.Account)
  SharedDtor();
}

void Account::SharedDtor() {
  address_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  balance_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  vars_hash_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  birth_place_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete contract_meta_;
}

void Account::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Account::descriptor() {
  ::protobuf_block_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_block_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Account& Account::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_block_2eproto::scc_info_Account.base);
  return *internal_default_instance();
}


void Account::Clear() {
// @@protoc_insertion_point(message_clear_start:corepb.Account)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  address_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  balance_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  vars_hash_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  birth_place_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && contract_meta_ != NULL) {
    delete contract_meta_;
  }
  contract_meta_ = NULL;
  nonce_ = GOOGLE_ULONGLONG(0);
  _internal_metadata_.Clear();
}

bool Account::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:corepb.Account)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bytes address = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_address()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes balance = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_balance()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 nonce = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &nonce_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes vars_hash = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_vars_hash()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes birth_place = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_birth_place()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .corepb.ContractMeta contract_meta = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_contract_meta()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:corepb.Account)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:corepb.Account)
  return false;
#undef DO_
}

void Account::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:corepb.Account)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes address = 1;
  if (this->address().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->address(), output);
  }

  // bytes balance = 2;
  if (this->balance().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->balance(), output);
  }

  // uint64 nonce = 3;
  if (this->nonce() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->nonce(), output);
  }

  // bytes vars_hash = 4;
  if (this->vars_hash().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      4, this->vars_hash(), output);
  }

  // bytes birth_place = 5;
  if (this->birth_place().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      5, this->birth_place(), output);
  }

  // .corepb.ContractMeta contract_meta = 6;
  if (this->has_contract_meta()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, this->_internal_contract_meta(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:corepb.Account)
}

::google::protobuf::uint8* Account::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:corepb.Account)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes address = 1;
  if (this->address().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->address(), target);
  }

  // bytes balance = 2;
  if (this->balance().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->balance(), target);
  }

  // uint64 nonce = 3;
  if (this->nonce() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->nonce(), target);
  }

  // bytes vars_hash = 4;
  if (this->vars_hash().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        4, this->vars_hash(), target);
  }

  // bytes birth_place = 5;
  if (this->birth_place().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        5, this->birth_place(), target);
  }

  // .corepb.ContractMeta contract_meta = 6;
  if (this->has_contract_meta()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        6, this->_internal_contract_meta(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:corepb.Account)
  return target;
}

size_t Account::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:corepb.Account)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bytes address = 1;
  if (this->address().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->address());
  }

  // bytes balance = 2;
  if (this->balance().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->balance());
  }

  // bytes vars_hash = 4;
  if (this->vars_hash().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->vars_hash());
  }

  // bytes birth_place = 5;
  if (this->birth_place().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->birth_place());
  }

  // .corepb.ContractMeta contract_meta = 6;
  if (this->has_contract_meta()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *contract_meta_);
  }

  // uint64 nonce = 3;
  if (this->nonce() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->nonce());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Account::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:corepb.Account)
  GOOGLE_DCHECK_NE(&from, this);
  const Account* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Account>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:corepb.Account)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:corepb.Account)
    MergeFrom(*source);
  }
}

void Account::MergeFrom(const Account& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:corepb.Account)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.address().size() > 0) {

    address_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.address_);
  }
  if (from.balance().size() > 0) {

    balance_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.balance_);
  }
  if (from.vars_hash().size() > 0) {

    vars_hash_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.vars_hash_);
  }
  if (from.birth_place().size() > 0) {

    birth_place_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.birth_place_);
  }
  if (from.has_contract_meta()) {
    mutable_contract_meta()->::corepb::ContractMeta::MergeFrom(from.contract_meta());
  }
  if (from.nonce() != 0) {
    set_nonce(from.nonce());
  }
}

void Account::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:corepb.Account)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Account::CopyFrom(const Account& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:corepb.Account)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Account::IsInitialized() const {
  return true;
}

void Account::Swap(Account* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Account::InternalSwap(Account* other) {
  using std::swap;
  address_.Swap(&other->address_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  balance_.Swap(&other->balance_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  vars_hash_.Swap(&other->vars_hash_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  birth_place_.Swap(&other->birth_place_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(contract_meta_, other->contract_meta_);
  swap(nonce_, other->nonce_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Account::GetMetadata() const {
  protobuf_block_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_block_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void ContractMeta::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ContractMeta::kVersionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ContractMeta::ContractMeta()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_block_2eproto::scc_info_ContractMeta.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:corepb.ContractMeta)
}
ContractMeta::ContractMeta(const ContractMeta& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  version_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.version().size() > 0) {
    version_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.version_);
  }
  // @@protoc_insertion_point(copy_constructor:corepb.ContractMeta)
}

void ContractMeta::SharedCtor() {
  version_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

ContractMeta::~ContractMeta() {
  // @@protoc_insertion_point(destructor:corepb.ContractMeta)
  SharedDtor();
}

void ContractMeta::SharedDtor() {
  version_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ContractMeta::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* ContractMeta::descriptor() {
  ::protobuf_block_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_block_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ContractMeta& ContractMeta::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_block_2eproto::scc_info_ContractMeta.base);
  return *internal_default_instance();
}


void ContractMeta::Clear() {
// @@protoc_insertion_point(message_clear_start:corepb.ContractMeta)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  version_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool ContractMeta::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:corepb.ContractMeta)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string version = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_version()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->version().data(), static_cast<int>(this->version().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "corepb.ContractMeta.version"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:corepb.ContractMeta)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:corepb.ContractMeta)
  return false;
#undef DO_
}

void ContractMeta::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:corepb.ContractMeta)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string version = 1;
  if (this->version().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->version().data(), static_cast<int>(this->version().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "corepb.ContractMeta.version");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->version(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:corepb.ContractMeta)
}

::google::protobuf::uint8* ContractMeta::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:corepb.ContractMeta)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string version = 1;
  if (this->version().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->version().data(), static_cast<int>(this->version().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "corepb.ContractMeta.version");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->version(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:corepb.ContractMeta)
  return target;
}

size_t ContractMeta::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:corepb.ContractMeta)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string version = 1;
  if (this->version().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->version());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ContractMeta::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:corepb.ContractMeta)
  GOOGLE_DCHECK_NE(&from, this);
  const ContractMeta* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ContractMeta>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:corepb.ContractMeta)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:corepb.ContractMeta)
    MergeFrom(*source);
  }
}

void ContractMeta::MergeFrom(const ContractMeta& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:corepb.ContractMeta)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.version().size() > 0) {

    version_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.version_);
  }
}

void ContractMeta::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:corepb.ContractMeta)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ContractMeta::CopyFrom(const ContractMeta& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:corepb.ContractMeta)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ContractMeta::IsInitialized() const {
  return true;
}

void ContractMeta::Swap(ContractMeta* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ContractMeta::InternalSwap(ContractMeta* other) {
  using std::swap;
  version_.Swap(&other->version_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata ContractMeta::GetMetadata() const {
  protobuf_block_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_block_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Data::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Data::kTypeFieldNumber;
const int Data::kPayloadFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Data::Data()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_block_2eproto::scc_info_Data.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:corepb.Data)
}
Data::Data(const Data& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.type().size() > 0) {
    type_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.type_);
  }
  payload_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.payload().size() > 0) {
    payload_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.payload_);
  }
  // @@protoc_insertion_point(copy_constructor:corepb.Data)
}

void Data::SharedCtor() {
  type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  payload_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

Data::~Data() {
  // @@protoc_insertion_point(destructor:corepb.Data)
  SharedDtor();
}

void Data::SharedDtor() {
  type_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  payload_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Data::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Data::descriptor() {
  ::protobuf_block_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_block_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Data& Data::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_block_2eproto::scc_info_Data.base);
  return *internal_default_instance();
}


void Data::Clear() {
// @@protoc_insertion_point(message_clear_start:corepb.Data)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  payload_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool Data::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:corepb.Data)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string type = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_type()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->type().data(), static_cast<int>(this->type().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "corepb.Data.type"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes payload = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_payload()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:corepb.Data)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:corepb.Data)
  return false;
#undef DO_
}

void Data::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:corepb.Data)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string type = 1;
  if (this->type().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->type().data(), static_cast<int>(this->type().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "corepb.Data.type");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->type(), output);
  }

  // bytes payload = 2;
  if (this->payload().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->payload(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:corepb.Data)
}

::google::protobuf::uint8* Data::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:corepb.Data)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string type = 1;
  if (this->type().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->type().data(), static_cast<int>(this->type().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "corepb.Data.type");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->type(), target);
  }

  // bytes payload = 2;
  if (this->payload().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->payload(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:corepb.Data)
  return target;
}

size_t Data::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:corepb.Data)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string type = 1;
  if (this->type().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->type());
  }

  // bytes payload = 2;
  if (this->payload().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->payload());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Data::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:corepb.Data)
  GOOGLE_DCHECK_NE(&from, this);
  const Data* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Data>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:corepb.Data)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:corepb.Data)
    MergeFrom(*source);
  }
}

void Data::MergeFrom(const Data& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:corepb.Data)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.type().size() > 0) {

    type_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.type_);
  }
  if (from.payload().size() > 0) {

    payload_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.payload_);
  }
}

void Data::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:corepb.Data)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Data::CopyFrom(const Data& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:corepb.Data)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Data::IsInitialized() const {
  return true;
}

void Data::Swap(Data* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Data::InternalSwap(Data* other) {
  using std::swap;
  type_.Swap(&other->type_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  payload_.Swap(&other->payload_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Data::GetMetadata() const {
  protobuf_block_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_block_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Transaction::InitAsDefaultInstance() {
  ::corepb::_Transaction_default_instance_._instance.get_mutable()->data_ = const_cast< ::corepb::Data*>(
      ::corepb::Data::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Transaction::kHashFieldNumber;
const int Transaction::kFromFieldNumber;
const int Transaction::kToFieldNumber;
const int Transaction::kValueFieldNumber;
const int Transaction::kNonceFieldNumber;
const int Transaction::kTimestampFieldNumber;
const int Transaction::kDataFieldNumber;
const int Transaction::kChainIdFieldNumber;
const int Transaction::kGasPriceFieldNumber;
const int Transaction::kGasLimitFieldNumber;
const int Transaction::kAlgFieldNumber;
const int Transaction::kSignFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Transaction::Transaction()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_block_2eproto::scc_info_Transaction.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:corepb.Transaction)
}
Transaction::Transaction(const Transaction& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  hash_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.hash().size() > 0) {
    hash_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.hash_);
  }
  from_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.from().size() > 0) {
    from_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.from_);
  }
  to_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.to().size() > 0) {
    to_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.to_);
  }
  value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.value().size() > 0) {
    value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.value_);
  }
  gas_price_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.gas_price().size() > 0) {
    gas_price_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.gas_price_);
  }
  gas_limit_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.gas_limit().size() > 0) {
    gas_limit_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.gas_limit_);
  }
  sign_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.sign().size() > 0) {
    sign_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sign_);
  }
  if (from.has_data()) {
    data_ = new ::corepb::Data(*from.data_);
  } else {
    data_ = NULL;
  }
  ::memcpy(&nonce_, &from.nonce_,
    static_cast<size_t>(reinterpret_cast<char*>(&alg_) -
    reinterpret_cast<char*>(&nonce_)) + sizeof(alg_));
  // @@protoc_insertion_point(copy_constructor:corepb.Transaction)
}

void Transaction::SharedCtor() {
  hash_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  from_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  to_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  gas_price_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  gas_limit_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sign_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&data_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&alg_) -
      reinterpret_cast<char*>(&data_)) + sizeof(alg_));
}

Transaction::~Transaction() {
  // @@protoc_insertion_point(destructor:corepb.Transaction)
  SharedDtor();
}

void Transaction::SharedDtor() {
  hash_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  from_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  to_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  value_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  gas_price_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  gas_limit_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sign_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete data_;
}

void Transaction::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Transaction::descriptor() {
  ::protobuf_block_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_block_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Transaction& Transaction::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_block_2eproto::scc_info_Transaction.base);
  return *internal_default_instance();
}


void Transaction::Clear() {
// @@protoc_insertion_point(message_clear_start:corepb.Transaction)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  hash_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  from_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  to_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  value_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  gas_price_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  gas_limit_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sign_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && data_ != NULL) {
    delete data_;
  }
  data_ = NULL;
  ::memset(&nonce_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&alg_) -
      reinterpret_cast<char*>(&nonce_)) + sizeof(alg_));
  _internal_metadata_.Clear();
}

bool Transaction::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:corepb.Transaction)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bytes hash = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_hash()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes from = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_from()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes to = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_to()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes value = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_value()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 nonce = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &nonce_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 timestamp = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &timestamp_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .corepb.Data data = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_data()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 chain_id = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &chain_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes gas_price = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 74 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_gas_price()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes gas_limit = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 82 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_gas_limit()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 alg = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(88u /* 88 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &alg_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes sign = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(98u /* 98 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_sign()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:corepb.Transaction)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:corepb.Transaction)
  return false;
#undef DO_
}

void Transaction::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:corepb.Transaction)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes hash = 1;
  if (this->hash().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->hash(), output);
  }

  // bytes from = 2;
  if (this->from().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->from(), output);
  }

  // bytes to = 3;
  if (this->to().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      3, this->to(), output);
  }

  // bytes value = 4;
  if (this->value().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      4, this->value(), output);
  }

  // uint64 nonce = 5;
  if (this->nonce() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(5, this->nonce(), output);
  }

  // int64 timestamp = 6;
  if (this->timestamp() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(6, this->timestamp(), output);
  }

  // .corepb.Data data = 7;
  if (this->has_data()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, this->_internal_data(), output);
  }

  // uint32 chain_id = 8;
  if (this->chain_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(8, this->chain_id(), output);
  }

  // bytes gas_price = 9;
  if (this->gas_price().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      9, this->gas_price(), output);
  }

  // bytes gas_limit = 10;
  if (this->gas_limit().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      10, this->gas_limit(), output);
  }

  // uint32 alg = 11;
  if (this->alg() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(11, this->alg(), output);
  }

  // bytes sign = 12;
  if (this->sign().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      12, this->sign(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:corepb.Transaction)
}

::google::protobuf::uint8* Transaction::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:corepb.Transaction)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes hash = 1;
  if (this->hash().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->hash(), target);
  }

  // bytes from = 2;
  if (this->from().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->from(), target);
  }

  // bytes to = 3;
  if (this->to().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        3, this->to(), target);
  }

  // bytes value = 4;
  if (this->value().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        4, this->value(), target);
  }

  // uint64 nonce = 5;
  if (this->nonce() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(5, this->nonce(), target);
  }

  // int64 timestamp = 6;
  if (this->timestamp() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(6, this->timestamp(), target);
  }

  // .corepb.Data data = 7;
  if (this->has_data()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        7, this->_internal_data(), deterministic, target);
  }

  // uint32 chain_id = 8;
  if (this->chain_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(8, this->chain_id(), target);
  }

  // bytes gas_price = 9;
  if (this->gas_price().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        9, this->gas_price(), target);
  }

  // bytes gas_limit = 10;
  if (this->gas_limit().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        10, this->gas_limit(), target);
  }

  // uint32 alg = 11;
  if (this->alg() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(11, this->alg(), target);
  }

  // bytes sign = 12;
  if (this->sign().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        12, this->sign(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:corepb.Transaction)
  return target;
}

size_t Transaction::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:corepb.Transaction)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bytes hash = 1;
  if (this->hash().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->hash());
  }

  // bytes from = 2;
  if (this->from().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->from());
  }

  // bytes to = 3;
  if (this->to().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->to());
  }

  // bytes value = 4;
  if (this->value().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->value());
  }

  // bytes gas_price = 9;
  if (this->gas_price().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->gas_price());
  }

  // bytes gas_limit = 10;
  if (this->gas_limit().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->gas_limit());
  }

  // bytes sign = 12;
  if (this->sign().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->sign());
  }

  // .corepb.Data data = 7;
  if (this->has_data()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *data_);
  }

  // uint64 nonce = 5;
  if (this->nonce() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->nonce());
  }

  // int64 timestamp = 6;
  if (this->timestamp() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->timestamp());
  }

  // uint32 chain_id = 8;
  if (this->chain_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->chain_id());
  }

  // uint32 alg = 11;
  if (this->alg() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->alg());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Transaction::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:corepb.Transaction)
  GOOGLE_DCHECK_NE(&from, this);
  const Transaction* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Transaction>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:corepb.Transaction)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:corepb.Transaction)
    MergeFrom(*source);
  }
}

void Transaction::MergeFrom(const Transaction& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:corepb.Transaction)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.hash().size() > 0) {

    hash_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.hash_);
  }
  if (from.from().size() > 0) {

    from_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.from_);
  }
  if (from.to().size() > 0) {

    to_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.to_);
  }
  if (from.value().size() > 0) {

    value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.value_);
  }
  if (from.gas_price().size() > 0) {

    gas_price_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.gas_price_);
  }
  if (from.gas_limit().size() > 0) {

    gas_limit_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.gas_limit_);
  }
  if (from.sign().size() > 0) {

    sign_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sign_);
  }
  if (from.has_data()) {
    mutable_data()->::corepb::Data::MergeFrom(from.data());
  }
  if (from.nonce() != 0) {
    set_nonce(from.nonce());
  }
  if (from.timestamp() != 0) {
    set_timestamp(from.timestamp());
  }
  if (from.chain_id() != 0) {
    set_chain_id(from.chain_id());
  }
  if (from.alg() != 0) {
    set_alg(from.alg());
  }
}

void Transaction::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:corepb.Transaction)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Transaction::CopyFrom(const Transaction& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:corepb.Transaction)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Transaction::IsInitialized() const {
  return true;
}

void Transaction::Swap(Transaction* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Transaction::InternalSwap(Transaction* other) {
  using std::swap;
  hash_.Swap(&other->hash_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  from_.Swap(&other->from_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  to_.Swap(&other->to_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  value_.Swap(&other->value_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  gas_price_.Swap(&other->gas_price_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  gas_limit_.Swap(&other->gas_limit_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  sign_.Swap(&other->sign_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(data_, other->data_);
  swap(nonce_, other->nonce_);
  swap(timestamp_, other->timestamp_);
  swap(chain_id_, other->chain_id_);
  swap(alg_, other->alg_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Transaction::GetMetadata() const {
  protobuf_block_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_block_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void BlockHeader::InitAsDefaultInstance() {
  ::corepb::_BlockHeader_default_instance_._instance.get_mutable()->consensus_root_ = const_cast< ::consensuspb::ConsensusRoot*>(
      ::consensuspb::ConsensusRoot::internal_default_instance());
  ::corepb::_BlockHeader_default_instance_._instance.get_mutable()->random_ = const_cast< ::corepb::Random*>(
      ::corepb::Random::internal_default_instance());
}
void BlockHeader::clear_consensus_root() {
  if (GetArenaNoVirtual() == NULL && consensus_root_ != NULL) {
    delete consensus_root_;
  }
  consensus_root_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BlockHeader::kHashFieldNumber;
const int BlockHeader::kParentHashFieldNumber;
const int BlockHeader::kCoinbaseFieldNumber;
const int BlockHeader::kTimestampFieldNumber;
const int BlockHeader::kChainIdFieldNumber;
const int BlockHeader::kAlgFieldNumber;
const int BlockHeader::kSignFieldNumber;
const int BlockHeader::kStateRootFieldNumber;
const int BlockHeader::kTxsRootFieldNumber;
const int BlockHeader::kEventsRootFieldNumber;
const int BlockHeader::kConsensusRootFieldNumber;
const int BlockHeader::kRandomFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BlockHeader::BlockHeader()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_block_2eproto::scc_info_BlockHeader.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:corepb.BlockHeader)
}
BlockHeader::BlockHeader(const BlockHeader& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  hash_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.hash().size() > 0) {
    hash_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.hash_);
  }
  parent_hash_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.parent_hash().size() > 0) {
    parent_hash_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.parent_hash_);
  }
  coinbase_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.coinbase().size() > 0) {
    coinbase_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.coinbase_);
  }
  sign_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.sign().size() > 0) {
    sign_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sign_);
  }
  state_root_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.state_root().size() > 0) {
    state_root_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.state_root_);
  }
  txs_root_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.txs_root().size() > 0) {
    txs_root_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.txs_root_);
  }
  events_root_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.events_root().size() > 0) {
    events_root_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.events_root_);
  }
  if (from.has_consensus_root()) {
    consensus_root_ = new ::consensuspb::ConsensusRoot(*from.consensus_root_);
  } else {
    consensus_root_ = NULL;
  }
  if (from.has_random()) {
    random_ = new ::corepb::Random(*from.random_);
  } else {
    random_ = NULL;
  }
  ::memcpy(&timestamp_, &from.timestamp_,
    static_cast<size_t>(reinterpret_cast<char*>(&alg_) -
    reinterpret_cast<char*>(&timestamp_)) + sizeof(alg_));
  // @@protoc_insertion_point(copy_constructor:corepb.BlockHeader)
}

void BlockHeader::SharedCtor() {
  hash_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  parent_hash_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  coinbase_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sign_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  state_root_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  txs_root_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  events_root_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&consensus_root_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&alg_) -
      reinterpret_cast<char*>(&consensus_root_)) + sizeof(alg_));
}

BlockHeader::~BlockHeader() {
  // @@protoc_insertion_point(destructor:corepb.BlockHeader)
  SharedDtor();
}

void BlockHeader::SharedDtor() {
  hash_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  parent_hash_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  coinbase_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sign_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  state_root_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  txs_root_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  events_root_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete consensus_root_;
  if (this != internal_default_instance()) delete random_;
}

void BlockHeader::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* BlockHeader::descriptor() {
  ::protobuf_block_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_block_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const BlockHeader& BlockHeader::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_block_2eproto::scc_info_BlockHeader.base);
  return *internal_default_instance();
}


void BlockHeader::Clear() {
// @@protoc_insertion_point(message_clear_start:corepb.BlockHeader)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  hash_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  parent_hash_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  coinbase_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sign_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  state_root_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  txs_root_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  events_root_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && consensus_root_ != NULL) {
    delete consensus_root_;
  }
  consensus_root_ = NULL;
  if (GetArenaNoVirtual() == NULL && random_ != NULL) {
    delete random_;
  }
  random_ = NULL;
  ::memset(&timestamp_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&alg_) -
      reinterpret_cast<char*>(&timestamp_)) + sizeof(alg_));
  _internal_metadata_.Clear();
}

bool BlockHeader::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:corepb.BlockHeader)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bytes hash = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_hash()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes parent_hash = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_parent_hash()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes coinbase = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_coinbase()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 timestamp = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &timestamp_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 chain_id = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &chain_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 alg = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &alg_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes sign = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_sign()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes state_root = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 74 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_state_root()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes txs_root = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 82 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_txs_root()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes events_root = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(90u /* 90 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_events_root()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .consensuspb.ConsensusRoot consensus_root = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(98u /* 98 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_consensus_root()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .corepb.Random random = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(106u /* 106 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_random()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:corepb.BlockHeader)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:corepb.BlockHeader)
  return false;
#undef DO_
}

void BlockHeader::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:corepb.BlockHeader)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes hash = 1;
  if (this->hash().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->hash(), output);
  }

  // bytes parent_hash = 2;
  if (this->parent_hash().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->parent_hash(), output);
  }

  // bytes coinbase = 4;
  if (this->coinbase().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      4, this->coinbase(), output);
  }

  // int64 timestamp = 5;
  if (this->timestamp() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(5, this->timestamp(), output);
  }

  // uint32 chain_id = 6;
  if (this->chain_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(6, this->chain_id(), output);
  }

  // uint32 alg = 7;
  if (this->alg() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(7, this->alg(), output);
  }

  // bytes sign = 8;
  if (this->sign().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      8, this->sign(), output);
  }

  // bytes state_root = 9;
  if (this->state_root().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      9, this->state_root(), output);
  }

  // bytes txs_root = 10;
  if (this->txs_root().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      10, this->txs_root(), output);
  }

  // bytes events_root = 11;
  if (this->events_root().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      11, this->events_root(), output);
  }

  // .consensuspb.ConsensusRoot consensus_root = 12;
  if (this->has_consensus_root()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      12, this->_internal_consensus_root(), output);
  }

  // .corepb.Random random = 13;
  if (this->has_random()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      13, this->_internal_random(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:corepb.BlockHeader)
}

::google::protobuf::uint8* BlockHeader::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:corepb.BlockHeader)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes hash = 1;
  if (this->hash().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->hash(), target);
  }

  // bytes parent_hash = 2;
  if (this->parent_hash().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->parent_hash(), target);
  }

  // bytes coinbase = 4;
  if (this->coinbase().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        4, this->coinbase(), target);
  }

  // int64 timestamp = 5;
  if (this->timestamp() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(5, this->timestamp(), target);
  }

  // uint32 chain_id = 6;
  if (this->chain_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(6, this->chain_id(), target);
  }

  // uint32 alg = 7;
  if (this->alg() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(7, this->alg(), target);
  }

  // bytes sign = 8;
  if (this->sign().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        8, this->sign(), target);
  }

  // bytes state_root = 9;
  if (this->state_root().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        9, this->state_root(), target);
  }

  // bytes txs_root = 10;
  if (this->txs_root().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        10, this->txs_root(), target);
  }

  // bytes events_root = 11;
  if (this->events_root().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        11, this->events_root(), target);
  }

  // .consensuspb.ConsensusRoot consensus_root = 12;
  if (this->has_consensus_root()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        12, this->_internal_consensus_root(), deterministic, target);
  }

  // .corepb.Random random = 13;
  if (this->has_random()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        13, this->_internal_random(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:corepb.BlockHeader)
  return target;
}

size_t BlockHeader::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:corepb.BlockHeader)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bytes hash = 1;
  if (this->hash().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->hash());
  }

  // bytes parent_hash = 2;
  if (this->parent_hash().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->parent_hash());
  }

  // bytes coinbase = 4;
  if (this->coinbase().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->coinbase());
  }

  // bytes sign = 8;
  if (this->sign().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->sign());
  }

  // bytes state_root = 9;
  if (this->state_root().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->state_root());
  }

  // bytes txs_root = 10;
  if (this->txs_root().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->txs_root());
  }

  // bytes events_root = 11;
  if (this->events_root().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->events_root());
  }

  // .consensuspb.ConsensusRoot consensus_root = 12;
  if (this->has_consensus_root()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *consensus_root_);
  }

  // .corepb.Random random = 13;
  if (this->has_random()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *random_);
  }

  // int64 timestamp = 5;
  if (this->timestamp() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->timestamp());
  }

  // uint32 chain_id = 6;
  if (this->chain_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->chain_id());
  }

  // uint32 alg = 7;
  if (this->alg() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->alg());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void BlockHeader::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:corepb.BlockHeader)
  GOOGLE_DCHECK_NE(&from, this);
  const BlockHeader* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const BlockHeader>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:corepb.BlockHeader)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:corepb.BlockHeader)
    MergeFrom(*source);
  }
}

void BlockHeader::MergeFrom(const BlockHeader& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:corepb.BlockHeader)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.hash().size() > 0) {

    hash_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.hash_);
  }
  if (from.parent_hash().size() > 0) {

    parent_hash_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.parent_hash_);
  }
  if (from.coinbase().size() > 0) {

    coinbase_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.coinbase_);
  }
  if (from.sign().size() > 0) {

    sign_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sign_);
  }
  if (from.state_root().size() > 0) {

    state_root_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.state_root_);
  }
  if (from.txs_root().size() > 0) {

    txs_root_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.txs_root_);
  }
  if (from.events_root().size() > 0) {

    events_root_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.events_root_);
  }
  if (from.has_consensus_root()) {
    mutable_consensus_root()->::consensuspb::ConsensusRoot::MergeFrom(from.consensus_root());
  }
  if (from.has_random()) {
    mutable_random()->::corepb::Random::MergeFrom(from.random());
  }
  if (from.timestamp() != 0) {
    set_timestamp(from.timestamp());
  }
  if (from.chain_id() != 0) {
    set_chain_id(from.chain_id());
  }
  if (from.alg() != 0) {
    set_alg(from.alg());
  }
}

void BlockHeader::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:corepb.BlockHeader)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BlockHeader::CopyFrom(const BlockHeader& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:corepb.BlockHeader)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BlockHeader::IsInitialized() const {
  return true;
}

void BlockHeader::Swap(BlockHeader* other) {
  if (other == this) return;
  InternalSwap(other);
}
void BlockHeader::InternalSwap(BlockHeader* other) {
  using std::swap;
  hash_.Swap(&other->hash_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  parent_hash_.Swap(&other->parent_hash_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  coinbase_.Swap(&other->coinbase_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  sign_.Swap(&other->sign_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  state_root_.Swap(&other->state_root_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  txs_root_.Swap(&other->txs_root_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  events_root_.Swap(&other->events_root_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(consensus_root_, other->consensus_root_);
  swap(random_, other->random_);
  swap(timestamp_, other->timestamp_);
  swap(chain_id_, other->chain_id_);
  swap(alg_, other->alg_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata BlockHeader::GetMetadata() const {
  protobuf_block_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_block_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Block::InitAsDefaultInstance() {
  ::corepb::_Block_default_instance_._instance.get_mutable()->header_ = const_cast< ::corepb::BlockHeader*>(
      ::corepb::BlockHeader::internal_default_instance());
  ::corepb::_Block_default_instance_._instance.get_mutable()->dependency_ = const_cast< ::dagpb::Dag*>(
      ::dagpb::Dag::internal_default_instance());
}
void Block::clear_dependency() {
  if (GetArenaNoVirtual() == NULL && dependency_ != NULL) {
    delete dependency_;
  }
  dependency_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Block::kHeaderFieldNumber;
const int Block::kTransactionsFieldNumber;
const int Block::kDependencyFieldNumber;
const int Block::kHeightFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Block::Block()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_block_2eproto::scc_info_Block.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:corepb.Block)
}
Block::Block(const Block& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      transactions_(from.transactions_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_header()) {
    header_ = new ::corepb::BlockHeader(*from.header_);
  } else {
    header_ = NULL;
  }
  if (from.has_dependency()) {
    dependency_ = new ::dagpb::Dag(*from.dependency_);
  } else {
    dependency_ = NULL;
  }
  height_ = from.height_;
  // @@protoc_insertion_point(copy_constructor:corepb.Block)
}

void Block::SharedCtor() {
  ::memset(&header_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&height_) -
      reinterpret_cast<char*>(&header_)) + sizeof(height_));
}

Block::~Block() {
  // @@protoc_insertion_point(destructor:corepb.Block)
  SharedDtor();
}

void Block::SharedDtor() {
  if (this != internal_default_instance()) delete header_;
  if (this != internal_default_instance()) delete dependency_;
}

void Block::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Block::descriptor() {
  ::protobuf_block_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_block_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Block& Block::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_block_2eproto::scc_info_Block.base);
  return *internal_default_instance();
}


void Block::Clear() {
// @@protoc_insertion_point(message_clear_start:corepb.Block)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  transactions_.Clear();
  if (GetArenaNoVirtual() == NULL && header_ != NULL) {
    delete header_;
  }
  header_ = NULL;
  if (GetArenaNoVirtual() == NULL && dependency_ != NULL) {
    delete dependency_;
  }
  dependency_ = NULL;
  height_ = GOOGLE_ULONGLONG(0);
  _internal_metadata_.Clear();
}

bool Block::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:corepb.Block)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .corepb.BlockHeader header = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_header()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .corepb.Transaction transactions = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_transactions()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .dagpb.Dag dependency = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_dependency()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 height = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &height_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:corepb.Block)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:corepb.Block)
  return false;
#undef DO_
}

void Block::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:corepb.Block)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .corepb.BlockHeader header = 1;
  if (this->has_header()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_header(), output);
  }

  // repeated .corepb.Transaction transactions = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->transactions_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->transactions(static_cast<int>(i)),
      output);
  }

  // .dagpb.Dag dependency = 3;
  if (this->has_dependency()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_dependency(), output);
  }

  // uint64 height = 4;
  if (this->height() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(4, this->height(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:corepb.Block)
}

::google::protobuf::uint8* Block::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:corepb.Block)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .corepb.BlockHeader header = 1;
  if (this->has_header()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_header(), deterministic, target);
  }

  // repeated .corepb.Transaction transactions = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->transactions_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->transactions(static_cast<int>(i)), deterministic, target);
  }

  // .dagpb.Dag dependency = 3;
  if (this->has_dependency()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_dependency(), deterministic, target);
  }

  // uint64 height = 4;
  if (this->height() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(4, this->height(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:corepb.Block)
  return target;
}

size_t Block::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:corepb.Block)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .corepb.Transaction transactions = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->transactions_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->transactions(static_cast<int>(i)));
    }
  }

  // .corepb.BlockHeader header = 1;
  if (this->has_header()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *header_);
  }

  // .dagpb.Dag dependency = 3;
  if (this->has_dependency()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *dependency_);
  }

  // uint64 height = 4;
  if (this->height() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->height());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Block::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:corepb.Block)
  GOOGLE_DCHECK_NE(&from, this);
  const Block* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Block>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:corepb.Block)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:corepb.Block)
    MergeFrom(*source);
  }
}

void Block::MergeFrom(const Block& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:corepb.Block)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  transactions_.MergeFrom(from.transactions_);
  if (from.has_header()) {
    mutable_header()->::corepb::BlockHeader::MergeFrom(from.header());
  }
  if (from.has_dependency()) {
    mutable_dependency()->::dagpb::Dag::MergeFrom(from.dependency());
  }
  if (from.height() != 0) {
    set_height(from.height());
  }
}

void Block::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:corepb.Block)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Block::CopyFrom(const Block& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:corepb.Block)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Block::IsInitialized() const {
  return true;
}

void Block::Swap(Block* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Block::InternalSwap(Block* other) {
  using std::swap;
  CastToBase(&transactions_)->InternalSwap(CastToBase(&other->transactions_));
  swap(header_, other->header_);
  swap(dependency_, other->dependency_);
  swap(height_, other->height_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Block::GetMetadata() const {
  protobuf_block_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_block_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void NetBlocks::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int NetBlocks::kFromFieldNumber;
const int NetBlocks::kBatchFieldNumber;
const int NetBlocks::kBlocksFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

NetBlocks::NetBlocks()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_block_2eproto::scc_info_NetBlocks.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:corepb.NetBlocks)
}
NetBlocks::NetBlocks(const NetBlocks& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      blocks_(from.blocks_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  from_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.from().size() > 0) {
    from_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.from_);
  }
  batch_ = from.batch_;
  // @@protoc_insertion_point(copy_constructor:corepb.NetBlocks)
}

void NetBlocks::SharedCtor() {
  from_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  batch_ = GOOGLE_ULONGLONG(0);
}

NetBlocks::~NetBlocks() {
  // @@protoc_insertion_point(destructor:corepb.NetBlocks)
  SharedDtor();
}

void NetBlocks::SharedDtor() {
  from_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void NetBlocks::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* NetBlocks::descriptor() {
  ::protobuf_block_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_block_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const NetBlocks& NetBlocks::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_block_2eproto::scc_info_NetBlocks.base);
  return *internal_default_instance();
}


void NetBlocks::Clear() {
// @@protoc_insertion_point(message_clear_start:corepb.NetBlocks)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  blocks_.Clear();
  from_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  batch_ = GOOGLE_ULONGLONG(0);
  _internal_metadata_.Clear();
}

bool NetBlocks::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:corepb.NetBlocks)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string from = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_from()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->from().data(), static_cast<int>(this->from().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "corepb.NetBlocks.from"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 batch = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &batch_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .corepb.Block blocks = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_blocks()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:corepb.NetBlocks)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:corepb.NetBlocks)
  return false;
#undef DO_
}

void NetBlocks::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:corepb.NetBlocks)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string from = 1;
  if (this->from().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->from().data(), static_cast<int>(this->from().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "corepb.NetBlocks.from");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->from(), output);
  }

  // uint64 batch = 2;
  if (this->batch() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->batch(), output);
  }

  // repeated .corepb.Block blocks = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->blocks_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3,
      this->blocks(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:corepb.NetBlocks)
}

::google::protobuf::uint8* NetBlocks::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:corepb.NetBlocks)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string from = 1;
  if (this->from().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->from().data(), static_cast<int>(this->from().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "corepb.NetBlocks.from");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->from(), target);
  }

  // uint64 batch = 2;
  if (this->batch() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->batch(), target);
  }

  // repeated .corepb.Block blocks = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->blocks_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->blocks(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:corepb.NetBlocks)
  return target;
}

size_t NetBlocks::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:corepb.NetBlocks)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .corepb.Block blocks = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->blocks_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->blocks(static_cast<int>(i)));
    }
  }

  // string from = 1;
  if (this->from().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->from());
  }

  // uint64 batch = 2;
  if (this->batch() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->batch());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void NetBlocks::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:corepb.NetBlocks)
  GOOGLE_DCHECK_NE(&from, this);
  const NetBlocks* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const NetBlocks>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:corepb.NetBlocks)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:corepb.NetBlocks)
    MergeFrom(*source);
  }
}

void NetBlocks::MergeFrom(const NetBlocks& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:corepb.NetBlocks)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  blocks_.MergeFrom(from.blocks_);
  if (from.from().size() > 0) {

    from_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.from_);
  }
  if (from.batch() != 0) {
    set_batch(from.batch());
  }
}

void NetBlocks::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:corepb.NetBlocks)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void NetBlocks::CopyFrom(const NetBlocks& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:corepb.NetBlocks)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool NetBlocks::IsInitialized() const {
  return true;
}

void NetBlocks::Swap(NetBlocks* other) {
  if (other == this) return;
  InternalSwap(other);
}
void NetBlocks::InternalSwap(NetBlocks* other) {
  using std::swap;
  CastToBase(&blocks_)->InternalSwap(CastToBase(&other->blocks_));
  from_.Swap(&other->from_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(batch_, other->batch_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata NetBlocks::GetMetadata() const {
  protobuf_block_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_block_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void NetBlock::InitAsDefaultInstance() {
  ::corepb::_NetBlock_default_instance_._instance.get_mutable()->block_ = const_cast< ::corepb::Block*>(
      ::corepb::Block::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int NetBlock::kFromFieldNumber;
const int NetBlock::kBatchFieldNumber;
const int NetBlock::kBlockFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

NetBlock::NetBlock()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_block_2eproto::scc_info_NetBlock.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:corepb.NetBlock)
}
NetBlock::NetBlock(const NetBlock& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  from_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.from().size() > 0) {
    from_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.from_);
  }
  if (from.has_block()) {
    block_ = new ::corepb::Block(*from.block_);
  } else {
    block_ = NULL;
  }
  batch_ = from.batch_;
  // @@protoc_insertion_point(copy_constructor:corepb.NetBlock)
}

void NetBlock::SharedCtor() {
  from_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&block_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&batch_) -
      reinterpret_cast<char*>(&block_)) + sizeof(batch_));
}

NetBlock::~NetBlock() {
  // @@protoc_insertion_point(destructor:corepb.NetBlock)
  SharedDtor();
}

void NetBlock::SharedDtor() {
  from_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete block_;
}

void NetBlock::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* NetBlock::descriptor() {
  ::protobuf_block_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_block_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const NetBlock& NetBlock::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_block_2eproto::scc_info_NetBlock.base);
  return *internal_default_instance();
}


void NetBlock::Clear() {
// @@protoc_insertion_point(message_clear_start:corepb.NetBlock)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  from_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && block_ != NULL) {
    delete block_;
  }
  block_ = NULL;
  batch_ = GOOGLE_ULONGLONG(0);
  _internal_metadata_.Clear();
}

bool NetBlock::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:corepb.NetBlock)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string from = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_from()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->from().data(), static_cast<int>(this->from().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "corepb.NetBlock.from"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 batch = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &batch_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .corepb.Block block = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_block()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:corepb.NetBlock)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:corepb.NetBlock)
  return false;
#undef DO_
}

void NetBlock::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:corepb.NetBlock)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string from = 1;
  if (this->from().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->from().data(), static_cast<int>(this->from().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "corepb.NetBlock.from");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->from(), output);
  }

  // uint64 batch = 2;
  if (this->batch() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->batch(), output);
  }

  // .corepb.Block block = 3;
  if (this->has_block()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_block(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:corepb.NetBlock)
}

::google::protobuf::uint8* NetBlock::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:corepb.NetBlock)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string from = 1;
  if (this->from().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->from().data(), static_cast<int>(this->from().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "corepb.NetBlock.from");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->from(), target);
  }

  // uint64 batch = 2;
  if (this->batch() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->batch(), target);
  }

  // .corepb.Block block = 3;
  if (this->has_block()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_block(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:corepb.NetBlock)
  return target;
}

size_t NetBlock::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:corepb.NetBlock)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string from = 1;
  if (this->from().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->from());
  }

  // .corepb.Block block = 3;
  if (this->has_block()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *block_);
  }

  // uint64 batch = 2;
  if (this->batch() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->batch());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void NetBlock::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:corepb.NetBlock)
  GOOGLE_DCHECK_NE(&from, this);
  const NetBlock* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const NetBlock>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:corepb.NetBlock)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:corepb.NetBlock)
    MergeFrom(*source);
  }
}

void NetBlock::MergeFrom(const NetBlock& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:corepb.NetBlock)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.from().size() > 0) {

    from_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.from_);
  }
  if (from.has_block()) {
    mutable_block()->::corepb::Block::MergeFrom(from.block());
  }
  if (from.batch() != 0) {
    set_batch(from.batch());
  }
}

void NetBlock::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:corepb.NetBlock)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void NetBlock::CopyFrom(const NetBlock& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:corepb.NetBlock)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool NetBlock::IsInitialized() const {
  return true;
}

void NetBlock::Swap(NetBlock* other) {
  if (other == this) return;
  InternalSwap(other);
}
void NetBlock::InternalSwap(NetBlock* other) {
  using std::swap;
  from_.Swap(&other->from_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(block_, other->block_);
  swap(batch_, other->batch_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata NetBlock::GetMetadata() const {
  protobuf_block_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_block_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void DownloadBlock::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DownloadBlock::kHashFieldNumber;
const int DownloadBlock::kSignFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DownloadBlock::DownloadBlock()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_block_2eproto::scc_info_DownloadBlock.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:corepb.DownloadBlock)
}
DownloadBlock::DownloadBlock(const DownloadBlock& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  hash_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.hash().size() > 0) {
    hash_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.hash_);
  }
  sign_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.sign().size() > 0) {
    sign_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sign_);
  }
  // @@protoc_insertion_point(copy_constructor:corepb.DownloadBlock)
}

void DownloadBlock::SharedCtor() {
  hash_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sign_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

DownloadBlock::~DownloadBlock() {
  // @@protoc_insertion_point(destructor:corepb.DownloadBlock)
  SharedDtor();
}

void DownloadBlock::SharedDtor() {
  hash_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sign_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void DownloadBlock::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* DownloadBlock::descriptor() {
  ::protobuf_block_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_block_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DownloadBlock& DownloadBlock::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_block_2eproto::scc_info_DownloadBlock.base);
  return *internal_default_instance();
}


void DownloadBlock::Clear() {
// @@protoc_insertion_point(message_clear_start:corepb.DownloadBlock)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  hash_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  sign_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool DownloadBlock::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:corepb.DownloadBlock)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bytes hash = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_hash()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes sign = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_sign()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:corepb.DownloadBlock)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:corepb.DownloadBlock)
  return false;
#undef DO_
}

void DownloadBlock::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:corepb.DownloadBlock)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes hash = 1;
  if (this->hash().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->hash(), output);
  }

  // bytes sign = 2;
  if (this->sign().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->sign(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:corepb.DownloadBlock)
}

::google::protobuf::uint8* DownloadBlock::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:corepb.DownloadBlock)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes hash = 1;
  if (this->hash().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->hash(), target);
  }

  // bytes sign = 2;
  if (this->sign().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->sign(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:corepb.DownloadBlock)
  return target;
}

size_t DownloadBlock::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:corepb.DownloadBlock)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bytes hash = 1;
  if (this->hash().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->hash());
  }

  // bytes sign = 2;
  if (this->sign().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->sign());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DownloadBlock::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:corepb.DownloadBlock)
  GOOGLE_DCHECK_NE(&from, this);
  const DownloadBlock* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DownloadBlock>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:corepb.DownloadBlock)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:corepb.DownloadBlock)
    MergeFrom(*source);
  }
}

void DownloadBlock::MergeFrom(const DownloadBlock& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:corepb.DownloadBlock)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.hash().size() > 0) {

    hash_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.hash_);
  }
  if (from.sign().size() > 0) {

    sign_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.sign_);
  }
}

void DownloadBlock::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:corepb.DownloadBlock)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DownloadBlock::CopyFrom(const DownloadBlock& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:corepb.DownloadBlock)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DownloadBlock::IsInitialized() const {
  return true;
}

void DownloadBlock::Swap(DownloadBlock* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DownloadBlock::InternalSwap(DownloadBlock* other) {
  using std::swap;
  hash_.Swap(&other->hash_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  sign_.Swap(&other->sign_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata DownloadBlock::GetMetadata() const {
  protobuf_block_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_block_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Random::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Random::kVrfSeedFieldNumber;
const int Random::kVrfProofFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Random::Random()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_block_2eproto::scc_info_Random.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:corepb.Random)
}
Random::Random(const Random& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  vrf_seed_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.vrf_seed().size() > 0) {
    vrf_seed_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.vrf_seed_);
  }
  vrf_proof_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.vrf_proof().size() > 0) {
    vrf_proof_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.vrf_proof_);
  }
  // @@protoc_insertion_point(copy_constructor:corepb.Random)
}

void Random::SharedCtor() {
  vrf_seed_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  vrf_proof_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

Random::~Random() {
  // @@protoc_insertion_point(destructor:corepb.Random)
  SharedDtor();
}

void Random::SharedDtor() {
  vrf_seed_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  vrf_proof_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Random::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Random::descriptor() {
  ::protobuf_block_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_block_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Random& Random::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_block_2eproto::scc_info_Random.base);
  return *internal_default_instance();
}


void Random::Clear() {
// @@protoc_insertion_point(message_clear_start:corepb.Random)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  vrf_seed_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  vrf_proof_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool Random::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:corepb.Random)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // bytes vrf_seed = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_vrf_seed()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes vrf_proof = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_vrf_proof()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:corepb.Random)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:corepb.Random)
  return false;
#undef DO_
}

void Random::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:corepb.Random)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes vrf_seed = 1;
  if (this->vrf_seed().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      1, this->vrf_seed(), output);
  }

  // bytes vrf_proof = 2;
  if (this->vrf_proof().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->vrf_proof(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:corepb.Random)
}

::google::protobuf::uint8* Random::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:corepb.Random)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bytes vrf_seed = 1;
  if (this->vrf_seed().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->vrf_seed(), target);
  }

  // bytes vrf_proof = 2;
  if (this->vrf_proof().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        2, this->vrf_proof(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:corepb.Random)
  return target;
}

size_t Random::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:corepb.Random)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // bytes vrf_seed = 1;
  if (this->vrf_seed().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->vrf_seed());
  }

  // bytes vrf_proof = 2;
  if (this->vrf_proof().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->vrf_proof());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Random::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:corepb.Random)
  GOOGLE_DCHECK_NE(&from, this);
  const Random* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Random>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:corepb.Random)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:corepb.Random)
    MergeFrom(*source);
  }
}

void Random::MergeFrom(const Random& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:corepb.Random)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.vrf_seed().size() > 0) {

    vrf_seed_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.vrf_seed_);
  }
  if (from.vrf_proof().size() > 0) {

    vrf_proof_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.vrf_proof_);
  }
}

void Random::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:corepb.Random)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Random::CopyFrom(const Random& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:corepb.Random)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Random::IsInitialized() const {
  return true;
}

void Random::Swap(Random* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Random::InternalSwap(Random* other) {
  using std::swap;
  vrf_seed_.Swap(&other->vrf_seed_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  vrf_proof_.Swap(&other->vrf_proof_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Random::GetMetadata() const {
  protobuf_block_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_block_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace corepb
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::corepb::Account* Arena::CreateMaybeMessage< ::corepb::Account >(Arena* arena) {
  return Arena::CreateInternal< ::corepb::Account >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::corepb::ContractMeta* Arena::CreateMaybeMessage< ::corepb::ContractMeta >(Arena* arena) {
  return Arena::CreateInternal< ::corepb::ContractMeta >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::corepb::Data* Arena::CreateMaybeMessage< ::corepb::Data >(Arena* arena) {
  return Arena::CreateInternal< ::corepb::Data >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::corepb::Transaction* Arena::CreateMaybeMessage< ::corepb::Transaction >(Arena* arena) {
  return Arena::CreateInternal< ::corepb::Transaction >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::corepb::BlockHeader* Arena::CreateMaybeMessage< ::corepb::BlockHeader >(Arena* arena) {
  return Arena::CreateInternal< ::corepb::BlockHeader >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::corepb::Block* Arena::CreateMaybeMessage< ::corepb::Block >(Arena* arena) {
  return Arena::CreateInternal< ::corepb::Block >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::corepb::NetBlocks* Arena::CreateMaybeMessage< ::corepb::NetBlocks >(Arena* arena) {
  return Arena::CreateInternal< ::corepb::NetBlocks >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::corepb::NetBlock* Arena::CreateMaybeMessage< ::corepb::NetBlock >(Arena* arena) {
  return Arena::CreateInternal< ::corepb::NetBlock >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::corepb::DownloadBlock* Arena::CreateMaybeMessage< ::corepb::DownloadBlock >(Arena* arena) {
  return Arena::CreateInternal< ::corepb::DownloadBlock >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::corepb::Random* Arena::CreateMaybeMessage< ::corepb::Random >(Arena* arena) {
  return Arena::CreateInternal< ::corepb::Random >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
