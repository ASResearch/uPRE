// Copyright (C) 2017 go-nebulas authors
//
// This file is part of the go-nebulas library.
//
// the go-nebulas library is free software: you can redistribute it and/or modify
// it under the terms of the GNU General Public License as published by
// the Free Software Foundation, either version 3 of the License, or
// (at your option) any later version.
//
// the go-nebulas library is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.
//
// You should have received a copy of the GNU General Public License
// along with the go-nebulas library.  If not, see <http://www.gnu.org/licenses/>.
//
syntax = "proto3";

import "dag.proto";
import "state.proto";

package corepb;

message Account {
    bytes address = 1;
    bytes balance = 2;
    uint64 nonce = 3;
    bytes vars_hash = 4;
    bytes birth_place = 5;
    ContractMeta contract_meta = 6;
}

message ContractMeta {
    string version = 1;
}

message Data {
    string type = 1;
    bytes payload = 2;
}

message Transaction {
    bytes hash  = 1;
    bytes from = 2;
    bytes to = 3;
    bytes value = 4;
    uint64 nonce = 5;
    int64 timestamp = 6;
    Data data = 7;
    uint32 chain_id = 8;
    bytes gas_price = 9;
    bytes gas_limit = 10;

    uint32 alg = 11;
    bytes sign = 12;
}

message BlockHeader {
    bytes hash = 1;
    bytes parent_hash = 2;
    reserved 3;                 // uint64 nonce = 3;
    bytes coinbase = 4;
    int64 timestamp = 5;
    uint32 chain_id = 6;
    uint32 alg = 7;
    bytes sign = 8;
    bytes state_root = 9;
    bytes txs_root = 10;
    bytes events_root = 11;
    consensuspb.ConsensusRoot consensus_root = 12;
    Random random = 13;
}

message Block {
    BlockHeader header = 1;
    repeated Transaction transactions = 2;
    dagpb.Dag dependency = 3;

    uint64 height = 4;
}

message NetBlocks {
    string from = 1;
    uint64 batch = 2;
    repeated Block blocks = 3;
}

message NetBlock {
    string from = 1;
    uint64 batch = 2;
    Block block = 3;
}

message DownloadBlock {
    bytes hash = 1;
    bytes sign = 2;
}

message Random {
    bytes vrf_seed = 1;
    bytes vrf_proof = 2;
}
