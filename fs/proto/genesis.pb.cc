// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: genesis.proto

#include "genesis.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_genesis_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_genesis_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_GenesisConsensusDpos;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_genesis_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_GenesisMeta;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_genesis_2eproto ::google::protobuf::internal::SCCInfo<0> scc_info_GenesisTokenDistribution;
extern PROTOBUF_INTERNAL_EXPORT_protobuf_genesis_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_GenesisConsensus;
}  // namespace protobuf_genesis_2eproto
namespace corepb {
class GenesisDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Genesis>
      _instance;
} _Genesis_default_instance_;
class GenesisMetaDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GenesisMeta>
      _instance;
} _GenesisMeta_default_instance_;
class GenesisConsensusDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GenesisConsensus>
      _instance;
} _GenesisConsensus_default_instance_;
class GenesisConsensusDposDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GenesisConsensusDpos>
      _instance;
} _GenesisConsensusDpos_default_instance_;
class GenesisTokenDistributionDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<GenesisTokenDistribution>
      _instance;
} _GenesisTokenDistribution_default_instance_;
}  // namespace corepb
namespace protobuf_genesis_2eproto {
static void InitDefaultsGenesis() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::corepb::_Genesis_default_instance_;
    new (ptr) ::corepb::Genesis();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::corepb::Genesis::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<3> scc_info_Genesis =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 3, InitDefaultsGenesis}, {
      &protobuf_genesis_2eproto::scc_info_GenesisMeta.base,
      &protobuf_genesis_2eproto::scc_info_GenesisConsensus.base,
      &protobuf_genesis_2eproto::scc_info_GenesisTokenDistribution.base,}};

static void InitDefaultsGenesisMeta() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::corepb::_GenesisMeta_default_instance_;
    new (ptr) ::corepb::GenesisMeta();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::corepb::GenesisMeta::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_GenesisMeta =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsGenesisMeta}, {}};

static void InitDefaultsGenesisConsensus() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::corepb::_GenesisConsensus_default_instance_;
    new (ptr) ::corepb::GenesisConsensus();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::corepb::GenesisConsensus::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_GenesisConsensus =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsGenesisConsensus}, {
      &protobuf_genesis_2eproto::scc_info_GenesisConsensusDpos.base,}};

static void InitDefaultsGenesisConsensusDpos() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::corepb::_GenesisConsensusDpos_default_instance_;
    new (ptr) ::corepb::GenesisConsensusDpos();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::corepb::GenesisConsensusDpos::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_GenesisConsensusDpos =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsGenesisConsensusDpos}, {}};

static void InitDefaultsGenesisTokenDistribution() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::corepb::_GenesisTokenDistribution_default_instance_;
    new (ptr) ::corepb::GenesisTokenDistribution();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::corepb::GenesisTokenDistribution::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<0> scc_info_GenesisTokenDistribution =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsGenesisTokenDistribution}, {}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_Genesis.base);
  ::google::protobuf::internal::InitSCC(&scc_info_GenesisMeta.base);
  ::google::protobuf::internal::InitSCC(&scc_info_GenesisConsensus.base);
  ::google::protobuf::internal::InitSCC(&scc_info_GenesisConsensusDpos.base);
  ::google::protobuf::internal::InitSCC(&scc_info_GenesisTokenDistribution.base);
}

::google::protobuf::Metadata file_level_metadata[5];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::corepb::Genesis, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::corepb::Genesis, meta_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::corepb::Genesis, consensus_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::corepb::Genesis, token_distribution_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::corepb::GenesisMeta, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::corepb::GenesisMeta, chain_id_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::corepb::GenesisConsensus, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::corepb::GenesisConsensus, dpos_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::corepb::GenesisConsensusDpos, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::corepb::GenesisConsensusDpos, dynasty_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::corepb::GenesisTokenDistribution, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::corepb::GenesisTokenDistribution, address_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::corepb::GenesisTokenDistribution, value_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::corepb::Genesis)},
  { 8, -1, sizeof(::corepb::GenesisMeta)},
  { 14, -1, sizeof(::corepb::GenesisConsensus)},
  { 20, -1, sizeof(::corepb::GenesisConsensusDpos)},
  { 26, -1, sizeof(::corepb::GenesisTokenDistribution)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::corepb::_Genesis_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::corepb::_GenesisMeta_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::corepb::_GenesisConsensus_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::corepb::_GenesisConsensusDpos_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::corepb::_GenesisTokenDistribution_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "genesis.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 5);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\rgenesis.proto\022\006corepb\"\227\001\n\007Genesis\022!\n\004m"
      "eta\030\001 \001(\0132\023.corepb.GenesisMeta\022+\n\tconsen"
      "sus\030\002 \001(\0132\030.corepb.GenesisConsensus\022<\n\022t"
      "oken_distribution\030\003 \003(\0132 .corepb.Genesis"
      "TokenDistribution\"\037\n\013GenesisMeta\022\020\n\010chai"
      "n_id\030\001 \001(\r\">\n\020GenesisConsensus\022*\n\004dpos\030\001"
      " \001(\0132\034.corepb.GenesisConsensusDpos\"\'\n\024Ge"
      "nesisConsensusDpos\022\017\n\007dynasty\030\001 \003(\t\":\n\030G"
      "enesisTokenDistribution\022\017\n\007address\030\001 \001(\t"
      "\022\r\n\005value\030\002 \001(\tb\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 383);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "genesis.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_genesis_2eproto
namespace corepb {

// ===================================================================

void Genesis::InitAsDefaultInstance() {
  ::corepb::_Genesis_default_instance_._instance.get_mutable()->meta_ = const_cast< ::corepb::GenesisMeta*>(
      ::corepb::GenesisMeta::internal_default_instance());
  ::corepb::_Genesis_default_instance_._instance.get_mutable()->consensus_ = const_cast< ::corepb::GenesisConsensus*>(
      ::corepb::GenesisConsensus::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Genesis::kMetaFieldNumber;
const int Genesis::kConsensusFieldNumber;
const int Genesis::kTokenDistributionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Genesis::Genesis()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_genesis_2eproto::scc_info_Genesis.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:corepb.Genesis)
}
Genesis::Genesis(const Genesis& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      token_distribution_(from.token_distribution_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_meta()) {
    meta_ = new ::corepb::GenesisMeta(*from.meta_);
  } else {
    meta_ = NULL;
  }
  if (from.has_consensus()) {
    consensus_ = new ::corepb::GenesisConsensus(*from.consensus_);
  } else {
    consensus_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:corepb.Genesis)
}

void Genesis::SharedCtor() {
  ::memset(&meta_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&consensus_) -
      reinterpret_cast<char*>(&meta_)) + sizeof(consensus_));
}

Genesis::~Genesis() {
  // @@protoc_insertion_point(destructor:corepb.Genesis)
  SharedDtor();
}

void Genesis::SharedDtor() {
  if (this != internal_default_instance()) delete meta_;
  if (this != internal_default_instance()) delete consensus_;
}

void Genesis::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Genesis::descriptor() {
  ::protobuf_genesis_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_genesis_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Genesis& Genesis::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_genesis_2eproto::scc_info_Genesis.base);
  return *internal_default_instance();
}


void Genesis::Clear() {
// @@protoc_insertion_point(message_clear_start:corepb.Genesis)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  token_distribution_.Clear();
  if (GetArenaNoVirtual() == NULL && meta_ != NULL) {
    delete meta_;
  }
  meta_ = NULL;
  if (GetArenaNoVirtual() == NULL && consensus_ != NULL) {
    delete consensus_;
  }
  consensus_ = NULL;
  _internal_metadata_.Clear();
}

bool Genesis::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:corepb.Genesis)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .corepb.GenesisMeta meta = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_meta()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .corepb.GenesisConsensus consensus = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_consensus()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .corepb.GenesisTokenDistribution token_distribution = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_token_distribution()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:corepb.Genesis)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:corepb.Genesis)
  return false;
#undef DO_
}

void Genesis::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:corepb.Genesis)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .corepb.GenesisMeta meta = 1;
  if (this->has_meta()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_meta(), output);
  }

  // .corepb.GenesisConsensus consensus = 2;
  if (this->has_consensus()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->_internal_consensus(), output);
  }

  // repeated .corepb.GenesisTokenDistribution token_distribution = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->token_distribution_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3,
      this->token_distribution(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:corepb.Genesis)
}

::google::protobuf::uint8* Genesis::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:corepb.Genesis)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .corepb.GenesisMeta meta = 1;
  if (this->has_meta()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_meta(), deterministic, target);
  }

  // .corepb.GenesisConsensus consensus = 2;
  if (this->has_consensus()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->_internal_consensus(), deterministic, target);
  }

  // repeated .corepb.GenesisTokenDistribution token_distribution = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->token_distribution_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->token_distribution(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:corepb.Genesis)
  return target;
}

size_t Genesis::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:corepb.Genesis)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .corepb.GenesisTokenDistribution token_distribution = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->token_distribution_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->token_distribution(static_cast<int>(i)));
    }
  }

  // .corepb.GenesisMeta meta = 1;
  if (this->has_meta()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *meta_);
  }

  // .corepb.GenesisConsensus consensus = 2;
  if (this->has_consensus()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *consensus_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Genesis::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:corepb.Genesis)
  GOOGLE_DCHECK_NE(&from, this);
  const Genesis* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Genesis>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:corepb.Genesis)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:corepb.Genesis)
    MergeFrom(*source);
  }
}

void Genesis::MergeFrom(const Genesis& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:corepb.Genesis)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  token_distribution_.MergeFrom(from.token_distribution_);
  if (from.has_meta()) {
    mutable_meta()->::corepb::GenesisMeta::MergeFrom(from.meta());
  }
  if (from.has_consensus()) {
    mutable_consensus()->::corepb::GenesisConsensus::MergeFrom(from.consensus());
  }
}

void Genesis::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:corepb.Genesis)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Genesis::CopyFrom(const Genesis& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:corepb.Genesis)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Genesis::IsInitialized() const {
  return true;
}

void Genesis::Swap(Genesis* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Genesis::InternalSwap(Genesis* other) {
  using std::swap;
  CastToBase(&token_distribution_)->InternalSwap(CastToBase(&other->token_distribution_));
  swap(meta_, other->meta_);
  swap(consensus_, other->consensus_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Genesis::GetMetadata() const {
  protobuf_genesis_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_genesis_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void GenesisMeta::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GenesisMeta::kChainIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GenesisMeta::GenesisMeta()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_genesis_2eproto::scc_info_GenesisMeta.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:corepb.GenesisMeta)
}
GenesisMeta::GenesisMeta(const GenesisMeta& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  chain_id_ = from.chain_id_;
  // @@protoc_insertion_point(copy_constructor:corepb.GenesisMeta)
}

void GenesisMeta::SharedCtor() {
  chain_id_ = 0u;
}

GenesisMeta::~GenesisMeta() {
  // @@protoc_insertion_point(destructor:corepb.GenesisMeta)
  SharedDtor();
}

void GenesisMeta::SharedDtor() {
}

void GenesisMeta::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* GenesisMeta::descriptor() {
  ::protobuf_genesis_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_genesis_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GenesisMeta& GenesisMeta::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_genesis_2eproto::scc_info_GenesisMeta.base);
  return *internal_default_instance();
}


void GenesisMeta::Clear() {
// @@protoc_insertion_point(message_clear_start:corepb.GenesisMeta)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  chain_id_ = 0u;
  _internal_metadata_.Clear();
}

bool GenesisMeta::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:corepb.GenesisMeta)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // uint32 chain_id = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &chain_id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:corepb.GenesisMeta)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:corepb.GenesisMeta)
  return false;
#undef DO_
}

void GenesisMeta::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:corepb.GenesisMeta)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 chain_id = 1;
  if (this->chain_id() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->chain_id(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:corepb.GenesisMeta)
}

::google::protobuf::uint8* GenesisMeta::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:corepb.GenesisMeta)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint32 chain_id = 1;
  if (this->chain_id() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->chain_id(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:corepb.GenesisMeta)
  return target;
}

size_t GenesisMeta::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:corepb.GenesisMeta)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint32 chain_id = 1;
  if (this->chain_id() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->chain_id());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GenesisMeta::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:corepb.GenesisMeta)
  GOOGLE_DCHECK_NE(&from, this);
  const GenesisMeta* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GenesisMeta>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:corepb.GenesisMeta)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:corepb.GenesisMeta)
    MergeFrom(*source);
  }
}

void GenesisMeta::MergeFrom(const GenesisMeta& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:corepb.GenesisMeta)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.chain_id() != 0) {
    set_chain_id(from.chain_id());
  }
}

void GenesisMeta::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:corepb.GenesisMeta)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GenesisMeta::CopyFrom(const GenesisMeta& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:corepb.GenesisMeta)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GenesisMeta::IsInitialized() const {
  return true;
}

void GenesisMeta::Swap(GenesisMeta* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GenesisMeta::InternalSwap(GenesisMeta* other) {
  using std::swap;
  swap(chain_id_, other->chain_id_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata GenesisMeta::GetMetadata() const {
  protobuf_genesis_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_genesis_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void GenesisConsensus::InitAsDefaultInstance() {
  ::corepb::_GenesisConsensus_default_instance_._instance.get_mutable()->dpos_ = const_cast< ::corepb::GenesisConsensusDpos*>(
      ::corepb::GenesisConsensusDpos::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GenesisConsensus::kDposFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GenesisConsensus::GenesisConsensus()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_genesis_2eproto::scc_info_GenesisConsensus.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:corepb.GenesisConsensus)
}
GenesisConsensus::GenesisConsensus(const GenesisConsensus& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_dpos()) {
    dpos_ = new ::corepb::GenesisConsensusDpos(*from.dpos_);
  } else {
    dpos_ = NULL;
  }
  // @@protoc_insertion_point(copy_constructor:corepb.GenesisConsensus)
}

void GenesisConsensus::SharedCtor() {
  dpos_ = NULL;
}

GenesisConsensus::~GenesisConsensus() {
  // @@protoc_insertion_point(destructor:corepb.GenesisConsensus)
  SharedDtor();
}

void GenesisConsensus::SharedDtor() {
  if (this != internal_default_instance()) delete dpos_;
}

void GenesisConsensus::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* GenesisConsensus::descriptor() {
  ::protobuf_genesis_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_genesis_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GenesisConsensus& GenesisConsensus::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_genesis_2eproto::scc_info_GenesisConsensus.base);
  return *internal_default_instance();
}


void GenesisConsensus::Clear() {
// @@protoc_insertion_point(message_clear_start:corepb.GenesisConsensus)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaNoVirtual() == NULL && dpos_ != NULL) {
    delete dpos_;
  }
  dpos_ = NULL;
  _internal_metadata_.Clear();
}

bool GenesisConsensus::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:corepb.GenesisConsensus)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // .corepb.GenesisConsensusDpos dpos = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_dpos()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:corepb.GenesisConsensus)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:corepb.GenesisConsensus)
  return false;
#undef DO_
}

void GenesisConsensus::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:corepb.GenesisConsensus)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .corepb.GenesisConsensusDpos dpos = 1;
  if (this->has_dpos()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->_internal_dpos(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:corepb.GenesisConsensus)
}

::google::protobuf::uint8* GenesisConsensus::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:corepb.GenesisConsensus)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .corepb.GenesisConsensusDpos dpos = 1;
  if (this->has_dpos()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        1, this->_internal_dpos(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:corepb.GenesisConsensus)
  return target;
}

size_t GenesisConsensus::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:corepb.GenesisConsensus)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // .corepb.GenesisConsensusDpos dpos = 1;
  if (this->has_dpos()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *dpos_);
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GenesisConsensus::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:corepb.GenesisConsensus)
  GOOGLE_DCHECK_NE(&from, this);
  const GenesisConsensus* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GenesisConsensus>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:corepb.GenesisConsensus)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:corepb.GenesisConsensus)
    MergeFrom(*source);
  }
}

void GenesisConsensus::MergeFrom(const GenesisConsensus& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:corepb.GenesisConsensus)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_dpos()) {
    mutable_dpos()->::corepb::GenesisConsensusDpos::MergeFrom(from.dpos());
  }
}

void GenesisConsensus::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:corepb.GenesisConsensus)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GenesisConsensus::CopyFrom(const GenesisConsensus& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:corepb.GenesisConsensus)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GenesisConsensus::IsInitialized() const {
  return true;
}

void GenesisConsensus::Swap(GenesisConsensus* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GenesisConsensus::InternalSwap(GenesisConsensus* other) {
  using std::swap;
  swap(dpos_, other->dpos_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata GenesisConsensus::GetMetadata() const {
  protobuf_genesis_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_genesis_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void GenesisConsensusDpos::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GenesisConsensusDpos::kDynastyFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GenesisConsensusDpos::GenesisConsensusDpos()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_genesis_2eproto::scc_info_GenesisConsensusDpos.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:corepb.GenesisConsensusDpos)
}
GenesisConsensusDpos::GenesisConsensusDpos(const GenesisConsensusDpos& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      dynasty_(from.dynasty_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:corepb.GenesisConsensusDpos)
}

void GenesisConsensusDpos::SharedCtor() {
}

GenesisConsensusDpos::~GenesisConsensusDpos() {
  // @@protoc_insertion_point(destructor:corepb.GenesisConsensusDpos)
  SharedDtor();
}

void GenesisConsensusDpos::SharedDtor() {
}

void GenesisConsensusDpos::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* GenesisConsensusDpos::descriptor() {
  ::protobuf_genesis_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_genesis_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GenesisConsensusDpos& GenesisConsensusDpos::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_genesis_2eproto::scc_info_GenesisConsensusDpos.base);
  return *internal_default_instance();
}


void GenesisConsensusDpos::Clear() {
// @@protoc_insertion_point(message_clear_start:corepb.GenesisConsensusDpos)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  dynasty_.Clear();
  _internal_metadata_.Clear();
}

bool GenesisConsensusDpos::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:corepb.GenesisConsensusDpos)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated string dynasty = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_dynasty()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->dynasty(this->dynasty_size() - 1).data(),
            static_cast<int>(this->dynasty(this->dynasty_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "corepb.GenesisConsensusDpos.dynasty"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:corepb.GenesisConsensusDpos)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:corepb.GenesisConsensusDpos)
  return false;
#undef DO_
}

void GenesisConsensusDpos::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:corepb.GenesisConsensusDpos)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated string dynasty = 1;
  for (int i = 0, n = this->dynasty_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->dynasty(i).data(), static_cast<int>(this->dynasty(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "corepb.GenesisConsensusDpos.dynasty");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->dynasty(i), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:corepb.GenesisConsensusDpos)
}

::google::protobuf::uint8* GenesisConsensusDpos::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:corepb.GenesisConsensusDpos)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated string dynasty = 1;
  for (int i = 0, n = this->dynasty_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->dynasty(i).data(), static_cast<int>(this->dynasty(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "corepb.GenesisConsensusDpos.dynasty");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(1, this->dynasty(i), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:corepb.GenesisConsensusDpos)
  return target;
}

size_t GenesisConsensusDpos::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:corepb.GenesisConsensusDpos)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated string dynasty = 1;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->dynasty_size());
  for (int i = 0, n = this->dynasty_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->dynasty(i));
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GenesisConsensusDpos::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:corepb.GenesisConsensusDpos)
  GOOGLE_DCHECK_NE(&from, this);
  const GenesisConsensusDpos* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GenesisConsensusDpos>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:corepb.GenesisConsensusDpos)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:corepb.GenesisConsensusDpos)
    MergeFrom(*source);
  }
}

void GenesisConsensusDpos::MergeFrom(const GenesisConsensusDpos& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:corepb.GenesisConsensusDpos)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  dynasty_.MergeFrom(from.dynasty_);
}

void GenesisConsensusDpos::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:corepb.GenesisConsensusDpos)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GenesisConsensusDpos::CopyFrom(const GenesisConsensusDpos& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:corepb.GenesisConsensusDpos)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GenesisConsensusDpos::IsInitialized() const {
  return true;
}

void GenesisConsensusDpos::Swap(GenesisConsensusDpos* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GenesisConsensusDpos::InternalSwap(GenesisConsensusDpos* other) {
  using std::swap;
  dynasty_.InternalSwap(CastToBase(&other->dynasty_));
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata GenesisConsensusDpos::GetMetadata() const {
  protobuf_genesis_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_genesis_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void GenesisTokenDistribution::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int GenesisTokenDistribution::kAddressFieldNumber;
const int GenesisTokenDistribution::kValueFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

GenesisTokenDistribution::GenesisTokenDistribution()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_genesis_2eproto::scc_info_GenesisTokenDistribution.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:corepb.GenesisTokenDistribution)
}
GenesisTokenDistribution::GenesisTokenDistribution(const GenesisTokenDistribution& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  address_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.address().size() > 0) {
    address_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.address_);
  }
  value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.value().size() > 0) {
    value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.value_);
  }
  // @@protoc_insertion_point(copy_constructor:corepb.GenesisTokenDistribution)
}

void GenesisTokenDistribution::SharedCtor() {
  address_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  value_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

GenesisTokenDistribution::~GenesisTokenDistribution() {
  // @@protoc_insertion_point(destructor:corepb.GenesisTokenDistribution)
  SharedDtor();
}

void GenesisTokenDistribution::SharedDtor() {
  address_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  value_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void GenesisTokenDistribution::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* GenesisTokenDistribution::descriptor() {
  ::protobuf_genesis_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_genesis_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const GenesisTokenDistribution& GenesisTokenDistribution::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_genesis_2eproto::scc_info_GenesisTokenDistribution.base);
  return *internal_default_instance();
}


void GenesisTokenDistribution::Clear() {
// @@protoc_insertion_point(message_clear_start:corepb.GenesisTokenDistribution)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  address_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  value_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool GenesisTokenDistribution::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:corepb.GenesisTokenDistribution)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string address = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_address()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->address().data(), static_cast<int>(this->address().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "corepb.GenesisTokenDistribution.address"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string value = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_value()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->value().data(), static_cast<int>(this->value().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "corepb.GenesisTokenDistribution.value"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:corepb.GenesisTokenDistribution)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:corepb.GenesisTokenDistribution)
  return false;
#undef DO_
}

void GenesisTokenDistribution::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:corepb.GenesisTokenDistribution)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string address = 1;
  if (this->address().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->address().data(), static_cast<int>(this->address().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "corepb.GenesisTokenDistribution.address");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->address(), output);
  }

  // string value = 2;
  if (this->value().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->value().data(), static_cast<int>(this->value().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "corepb.GenesisTokenDistribution.value");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->value(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:corepb.GenesisTokenDistribution)
}

::google::protobuf::uint8* GenesisTokenDistribution::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:corepb.GenesisTokenDistribution)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string address = 1;
  if (this->address().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->address().data(), static_cast<int>(this->address().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "corepb.GenesisTokenDistribution.address");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->address(), target);
  }

  // string value = 2;
  if (this->value().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->value().data(), static_cast<int>(this->value().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "corepb.GenesisTokenDistribution.value");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->value(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:corepb.GenesisTokenDistribution)
  return target;
}

size_t GenesisTokenDistribution::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:corepb.GenesisTokenDistribution)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string address = 1;
  if (this->address().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->address());
  }

  // string value = 2;
  if (this->value().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->value());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void GenesisTokenDistribution::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:corepb.GenesisTokenDistribution)
  GOOGLE_DCHECK_NE(&from, this);
  const GenesisTokenDistribution* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const GenesisTokenDistribution>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:corepb.GenesisTokenDistribution)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:corepb.GenesisTokenDistribution)
    MergeFrom(*source);
  }
}

void GenesisTokenDistribution::MergeFrom(const GenesisTokenDistribution& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:corepb.GenesisTokenDistribution)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.address().size() > 0) {

    address_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.address_);
  }
  if (from.value().size() > 0) {

    value_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.value_);
  }
}

void GenesisTokenDistribution::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:corepb.GenesisTokenDistribution)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void GenesisTokenDistribution::CopyFrom(const GenesisTokenDistribution& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:corepb.GenesisTokenDistribution)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GenesisTokenDistribution::IsInitialized() const {
  return true;
}

void GenesisTokenDistribution::Swap(GenesisTokenDistribution* other) {
  if (other == this) return;
  InternalSwap(other);
}
void GenesisTokenDistribution::InternalSwap(GenesisTokenDistribution* other) {
  using std::swap;
  address_.Swap(&other->address_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  value_.Swap(&other->value_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata GenesisTokenDistribution::GetMetadata() const {
  protobuf_genesis_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_genesis_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace corepb
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::corepb::Genesis* Arena::CreateMaybeMessage< ::corepb::Genesis >(Arena* arena) {
  return Arena::CreateInternal< ::corepb::Genesis >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::corepb::GenesisMeta* Arena::CreateMaybeMessage< ::corepb::GenesisMeta >(Arena* arena) {
  return Arena::CreateInternal< ::corepb::GenesisMeta >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::corepb::GenesisConsensus* Arena::CreateMaybeMessage< ::corepb::GenesisConsensus >(Arena* arena) {
  return Arena::CreateInternal< ::corepb::GenesisConsensus >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::corepb::GenesisConsensusDpos* Arena::CreateMaybeMessage< ::corepb::GenesisConsensusDpos >(Arena* arena) {
  return Arena::CreateInternal< ::corepb::GenesisConsensusDpos >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::corepb::GenesisTokenDistribution* Arena::CreateMaybeMessage< ::corepb::GenesisTokenDistribution >(Arena* arena) {
  return Arena::CreateInternal< ::corepb::GenesisTokenDistribution >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
