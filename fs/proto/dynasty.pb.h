// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: dynasty.proto

#ifndef PROTOBUF_INCLUDED_dynasty_2eproto
#define PROTOBUF_INCLUDED_dynasty_2eproto

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3006001
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#define PROTOBUF_INTERNAL_EXPORT_protobuf_dynasty_2eproto 

namespace protobuf_dynasty_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[3];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
}  // namespace protobuf_dynasty_2eproto
namespace corepb {
class Dynasty;
class DynastyDefaultTypeInternal;
extern DynastyDefaultTypeInternal _Dynasty_default_instance_;
class DynastyCandidate;
class DynastyCandidateDefaultTypeInternal;
extern DynastyCandidateDefaultTypeInternal _DynastyCandidate_default_instance_;
class DynastyMeta;
class DynastyMetaDefaultTypeInternal;
extern DynastyMetaDefaultTypeInternal _DynastyMeta_default_instance_;
}  // namespace corepb
namespace google {
namespace protobuf {
template<> ::corepb::Dynasty* Arena::CreateMaybeMessage<::corepb::Dynasty>(Arena*);
template<> ::corepb::DynastyCandidate* Arena::CreateMaybeMessage<::corepb::DynastyCandidate>(Arena*);
template<> ::corepb::DynastyMeta* Arena::CreateMaybeMessage<::corepb::DynastyMeta>(Arena*);
}  // namespace protobuf
}  // namespace google
namespace corepb {

// ===================================================================

class Dynasty : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:corepb.Dynasty) */ {
 public:
  Dynasty();
  virtual ~Dynasty();

  Dynasty(const Dynasty& from);

  inline Dynasty& operator=(const Dynasty& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Dynasty(Dynasty&& from) noexcept
    : Dynasty() {
    *this = ::std::move(from);
  }

  inline Dynasty& operator=(Dynasty&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Dynasty& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Dynasty* internal_default_instance() {
    return reinterpret_cast<const Dynasty*>(
               &_Dynasty_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(Dynasty* other);
  friend void swap(Dynasty& a, Dynasty& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Dynasty* New() const final {
    return CreateMaybeMessage<Dynasty>(NULL);
  }

  Dynasty* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<Dynasty>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const Dynasty& from);
  void MergeFrom(const Dynasty& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Dynasty* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .corepb.DynastyCandidate candidate = 2;
  int candidate_size() const;
  void clear_candidate();
  static const int kCandidateFieldNumber = 2;
  ::corepb::DynastyCandidate* mutable_candidate(int index);
  ::google::protobuf::RepeatedPtrField< ::corepb::DynastyCandidate >*
      mutable_candidate();
  const ::corepb::DynastyCandidate& candidate(int index) const;
  ::corepb::DynastyCandidate* add_candidate();
  const ::google::protobuf::RepeatedPtrField< ::corepb::DynastyCandidate >&
      candidate() const;

  // .corepb.DynastyMeta meta = 1;
  bool has_meta() const;
  void clear_meta();
  static const int kMetaFieldNumber = 1;
  private:
  const ::corepb::DynastyMeta& _internal_meta() const;
  public:
  const ::corepb::DynastyMeta& meta() const;
  ::corepb::DynastyMeta* release_meta();
  ::corepb::DynastyMeta* mutable_meta();
  void set_allocated_meta(::corepb::DynastyMeta* meta);

  // @@protoc_insertion_point(class_scope:corepb.Dynasty)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::corepb::DynastyCandidate > candidate_;
  ::corepb::DynastyMeta* meta_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_dynasty_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class DynastyMeta : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:corepb.DynastyMeta) */ {
 public:
  DynastyMeta();
  virtual ~DynastyMeta();

  DynastyMeta(const DynastyMeta& from);

  inline DynastyMeta& operator=(const DynastyMeta& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  DynastyMeta(DynastyMeta&& from) noexcept
    : DynastyMeta() {
    *this = ::std::move(from);
  }

  inline DynastyMeta& operator=(DynastyMeta&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const DynastyMeta& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const DynastyMeta* internal_default_instance() {
    return reinterpret_cast<const DynastyMeta*>(
               &_DynastyMeta_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  void Swap(DynastyMeta* other);
  friend void swap(DynastyMeta& a, DynastyMeta& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline DynastyMeta* New() const final {
    return CreateMaybeMessage<DynastyMeta>(NULL);
  }

  DynastyMeta* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<DynastyMeta>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const DynastyMeta& from);
  void MergeFrom(const DynastyMeta& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(DynastyMeta* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 chain_id = 1;
  void clear_chain_id();
  static const int kChainIdFieldNumber = 1;
  ::google::protobuf::uint32 chain_id() const;
  void set_chain_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:corepb.DynastyMeta)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 chain_id_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_dynasty_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class DynastyCandidate : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:corepb.DynastyCandidate) */ {
 public:
  DynastyCandidate();
  virtual ~DynastyCandidate();

  DynastyCandidate(const DynastyCandidate& from);

  inline DynastyCandidate& operator=(const DynastyCandidate& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  DynastyCandidate(DynastyCandidate&& from) noexcept
    : DynastyCandidate() {
    *this = ::std::move(from);
  }

  inline DynastyCandidate& operator=(DynastyCandidate&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const DynastyCandidate& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const DynastyCandidate* internal_default_instance() {
    return reinterpret_cast<const DynastyCandidate*>(
               &_DynastyCandidate_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  void Swap(DynastyCandidate* other);
  friend void swap(DynastyCandidate& a, DynastyCandidate& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline DynastyCandidate* New() const final {
    return CreateMaybeMessage<DynastyCandidate>(NULL);
  }

  DynastyCandidate* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<DynastyCandidate>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const DynastyCandidate& from);
  void MergeFrom(const DynastyCandidate& from);
  void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(DynastyCandidate* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated string dynasty = 2;
  int dynasty_size() const;
  void clear_dynasty();
  static const int kDynastyFieldNumber = 2;
  const ::std::string& dynasty(int index) const;
  ::std::string* mutable_dynasty(int index);
  void set_dynasty(int index, const ::std::string& value);
  #if LANG_CXX11
  void set_dynasty(int index, ::std::string&& value);
  #endif
  void set_dynasty(int index, const char* value);
  void set_dynasty(int index, const char* value, size_t size);
  ::std::string* add_dynasty();
  void add_dynasty(const ::std::string& value);
  #if LANG_CXX11
  void add_dynasty(::std::string&& value);
  #endif
  void add_dynasty(const char* value);
  void add_dynasty(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& dynasty() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_dynasty();

  // uint64 serial = 1;
  void clear_serial();
  static const int kSerialFieldNumber = 1;
  ::google::protobuf::uint64 serial() const;
  void set_serial(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:corepb.DynastyCandidate)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::std::string> dynasty_;
  ::google::protobuf::uint64 serial_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::protobuf_dynasty_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// Dynasty

// .corepb.DynastyMeta meta = 1;
inline bool Dynasty::has_meta() const {
  return this != internal_default_instance() && meta_ != NULL;
}
inline void Dynasty::clear_meta() {
  if (GetArenaNoVirtual() == NULL && meta_ != NULL) {
    delete meta_;
  }
  meta_ = NULL;
}
inline const ::corepb::DynastyMeta& Dynasty::_internal_meta() const {
  return *meta_;
}
inline const ::corepb::DynastyMeta& Dynasty::meta() const {
  const ::corepb::DynastyMeta* p = meta_;
  // @@protoc_insertion_point(field_get:corepb.Dynasty.meta)
  return p != NULL ? *p : *reinterpret_cast<const ::corepb::DynastyMeta*>(
      &::corepb::_DynastyMeta_default_instance_);
}
inline ::corepb::DynastyMeta* Dynasty::release_meta() {
  // @@protoc_insertion_point(field_release:corepb.Dynasty.meta)
  
  ::corepb::DynastyMeta* temp = meta_;
  meta_ = NULL;
  return temp;
}
inline ::corepb::DynastyMeta* Dynasty::mutable_meta() {
  
  if (meta_ == NULL) {
    auto* p = CreateMaybeMessage<::corepb::DynastyMeta>(GetArenaNoVirtual());
    meta_ = p;
  }
  // @@protoc_insertion_point(field_mutable:corepb.Dynasty.meta)
  return meta_;
}
inline void Dynasty::set_allocated_meta(::corepb::DynastyMeta* meta) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == NULL) {
    delete meta_;
  }
  if (meta) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      meta = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, meta, submessage_arena);
    }
    
  } else {
    
  }
  meta_ = meta;
  // @@protoc_insertion_point(field_set_allocated:corepb.Dynasty.meta)
}

// repeated .corepb.DynastyCandidate candidate = 2;
inline int Dynasty::candidate_size() const {
  return candidate_.size();
}
inline void Dynasty::clear_candidate() {
  candidate_.Clear();
}
inline ::corepb::DynastyCandidate* Dynasty::mutable_candidate(int index) {
  // @@protoc_insertion_point(field_mutable:corepb.Dynasty.candidate)
  return candidate_.Mutable(index);
}
inline ::google::protobuf::RepeatedPtrField< ::corepb::DynastyCandidate >*
Dynasty::mutable_candidate() {
  // @@protoc_insertion_point(field_mutable_list:corepb.Dynasty.candidate)
  return &candidate_;
}
inline const ::corepb::DynastyCandidate& Dynasty::candidate(int index) const {
  // @@protoc_insertion_point(field_get:corepb.Dynasty.candidate)
  return candidate_.Get(index);
}
inline ::corepb::DynastyCandidate* Dynasty::add_candidate() {
  // @@protoc_insertion_point(field_add:corepb.Dynasty.candidate)
  return candidate_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::corepb::DynastyCandidate >&
Dynasty::candidate() const {
  // @@protoc_insertion_point(field_list:corepb.Dynasty.candidate)
  return candidate_;
}

// -------------------------------------------------------------------

// DynastyMeta

// uint32 chain_id = 1;
inline void DynastyMeta::clear_chain_id() {
  chain_id_ = 0u;
}
inline ::google::protobuf::uint32 DynastyMeta::chain_id() const {
  // @@protoc_insertion_point(field_get:corepb.DynastyMeta.chain_id)
  return chain_id_;
}
inline void DynastyMeta::set_chain_id(::google::protobuf::uint32 value) {
  
  chain_id_ = value;
  // @@protoc_insertion_point(field_set:corepb.DynastyMeta.chain_id)
}

// -------------------------------------------------------------------

// DynastyCandidate

// uint64 serial = 1;
inline void DynastyCandidate::clear_serial() {
  serial_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 DynastyCandidate::serial() const {
  // @@protoc_insertion_point(field_get:corepb.DynastyCandidate.serial)
  return serial_;
}
inline void DynastyCandidate::set_serial(::google::protobuf::uint64 value) {
  
  serial_ = value;
  // @@protoc_insertion_point(field_set:corepb.DynastyCandidate.serial)
}

// repeated string dynasty = 2;
inline int DynastyCandidate::dynasty_size() const {
  return dynasty_.size();
}
inline void DynastyCandidate::clear_dynasty() {
  dynasty_.Clear();
}
inline const ::std::string& DynastyCandidate::dynasty(int index) const {
  // @@protoc_insertion_point(field_get:corepb.DynastyCandidate.dynasty)
  return dynasty_.Get(index);
}
inline ::std::string* DynastyCandidate::mutable_dynasty(int index) {
  // @@protoc_insertion_point(field_mutable:corepb.DynastyCandidate.dynasty)
  return dynasty_.Mutable(index);
}
inline void DynastyCandidate::set_dynasty(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:corepb.DynastyCandidate.dynasty)
  dynasty_.Mutable(index)->assign(value);
}
#if LANG_CXX11
inline void DynastyCandidate::set_dynasty(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:corepb.DynastyCandidate.dynasty)
  dynasty_.Mutable(index)->assign(std::move(value));
}
#endif
inline void DynastyCandidate::set_dynasty(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  dynasty_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:corepb.DynastyCandidate.dynasty)
}
inline void DynastyCandidate::set_dynasty(int index, const char* value, size_t size) {
  dynasty_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:corepb.DynastyCandidate.dynasty)
}
inline ::std::string* DynastyCandidate::add_dynasty() {
  // @@protoc_insertion_point(field_add_mutable:corepb.DynastyCandidate.dynasty)
  return dynasty_.Add();
}
inline void DynastyCandidate::add_dynasty(const ::std::string& value) {
  dynasty_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:corepb.DynastyCandidate.dynasty)
}
#if LANG_CXX11
inline void DynastyCandidate::add_dynasty(::std::string&& value) {
  dynasty_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:corepb.DynastyCandidate.dynasty)
}
#endif
inline void DynastyCandidate::add_dynasty(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  dynasty_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:corepb.DynastyCandidate.dynasty)
}
inline void DynastyCandidate::add_dynasty(const char* value, size_t size) {
  dynasty_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:corepb.DynastyCandidate.dynasty)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
DynastyCandidate::dynasty() const {
  // @@protoc_insertion_point(field_list:corepb.DynastyCandidate.dynasty)
  return dynasty_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
DynastyCandidate::mutable_dynasty() {
  // @@protoc_insertion_point(field_mutable_list:corepb.DynastyCandidate.dynasty)
  return &dynasty_;
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace corepb

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_INCLUDED_dynasty_2eproto
